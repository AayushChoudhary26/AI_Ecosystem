.TH "GoogleSearch" 3 "AI Ecosystem" \" -*- nroff -*-
.ad l
.nh
.SH NAME
GoogleSearch
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <search_configure\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBGoogleSearch\fP (const std::string search_terms, const int num_results, const int start_index, const int filter, const int c2coff, const int date_restrict, const std::string extra_query, const std::string exact_terms, const std::string exclude_terms, const std::string site_search, const std::string site_search_filter, const std::string link_site, const std::string or_terms, const std::string date_restrict_type, const std::string low_range, const std::string high_range, const std::string search_type, const std::string filetype, const std::string rights, const std::string img_size, const std::string img_type, const std::string img_color_type, const std::string img_dominant_color, const std::string language, const std::string interface_language, const std::string user_country, const std::string result_country, const std::string safe, const std::string sort, const std::string json_file, const std::string env_file)"
.br
.RI "Class Constructor\&. Initializes class variables and constructs the search url\&. "
.ti -1c
.RI "\fB~GoogleSearch\fP ()"
.br
.RI "Class Destructor\&. Deinitializes the class variables\&. "
.ti -1c
.RI "int \fB_get_num_results\fP ()"
.br
.RI "Number of results to be returned by google search\&. "
.ti -1c
.RI "int \fB_get_start_index\fP ()"
.br
.RI "Index at which search result starts\&. "
.ti -1c
.RI "int \fB_get_filter\fP ()"
.br
.RI "Check whether duplicate is turned On or Off\&. "
.ti -1c
.RI "int \fB_get_c2coff\fP ()"
.br
.RI "Check whether Simplified and Traditional Chinese Search is turned On or Off\&. "
.ti -1c
.RI "int \fB_get_date_restrict\fP ()"
.br
.RI "Check whether search is restricted by date\&. "
.ti -1c
.RI "std::string \fB_get_query\fP ()"
.br
.RI "Get the query used to search on google\&. "
.ti -1c
.RI "std::string \fB_get_search_url\fP ()"
.br
.RI "Get the constructed url used to query google\&. "
.ti -1c
.RI "std::string \fB_get_extra_query\fP ()"
.br
.RI "Get the extra queries in the search\&. "
.ti -1c
.RI "std::string \fB_get_exact_terms\fP ()"
.br
.RI "Get the extra terms each document will include when searching\&. "
.ti -1c
.RI "std::string \fB_get_exclude_terms\fP ()"
.br
.RI "Get the word which is excluded from appearing in documents from search result\&. "
.ti -1c
.RI "std::string \fB_get_site_search\fP ()"
.br
.RI "Get the site to always include or exclude when searching a query\&. "
.ti -1c
.RI "std::string \fB_get_site_search_filter\fP ()"
.br
.RI "Get the value specifying is site should always be included or excluded when searching\&. "
.ti -1c
.RI "std::string \fB_get_link_site\fP ()"
.br
.RI "Get the link included in each result\&. "
.ti -1c
.RI "std::string \fB_get_or_terms\fP ()"
.br
.RI "Get the extra terms included in documents in search result\&. "
.ti -1c
.RI "std::string \fB_get_date_restrict_type\fP ()"
.br
.RI "Get the date restricting the search results\&. "
.ti -1c
.RI "std::string \fB_get_low_range\fP ()"
.br
.RI "Get the query appended to before the search query\&. "
.ti -1c
.RI "std::string \fB_get_high_range\fP ()"
.br
.RI "Get the query appended to after the search query\&. "
.ti -1c
.RI "std::string \fB_get_search_type\fP ()"
.br
.RI "Get the search type of the query\&. "
.ti -1c
.RI "std::string \fB_get_filetype\fP ()"
.br
.RI "Get the filetype of the query\&. "
.ti -1c
.RI "std::string \fB_get_rights\fP ()"
.br
.RI "Get the licensing of the query\&. "
.ti -1c
.RI "std::string \fB_get_img_size\fP ()"
.br
.RI "Get the size of the image\&. "
.ti -1c
.RI "std::string \fB_get_img_type\fP ()"
.br
.RI "Get the type of the image\&. "
.ti -1c
.RI "std::string \fB_get_img_color_type\fP ()"
.br
.RI "Get the color type of the image\&. "
.ti -1c
.RI "std::string \fB_get_img_dominant_color\fP ()"
.br
.RI "Get the dominant color of the image\&. "
.ti -1c
.RI "std::string \fB_get_language\fP ()"
.br
.RI "Get the language to search google\&. "
.ti -1c
.RI "std::string \fB_get_interface_language\fP ()"
.br
.RI "Get the user interface language\&. "
.ti -1c
.RI "std::string \fB_get_user_country\fP ()"
.br
.RI "Get the country to search from in google\&. "
.ti -1c
.RI "std::string \fB_get_result_country\fP ()"
.br
.RI "Get the country to search for in google\&. "
.ti -1c
.RI "std::string \fB_get_safe\fP ()"
.br
.RI "Get the safe search\&. "
.ti -1c
.RI "std::string \fB_get_sort\fP ()"
.br
.RI "Get the sort order\&. "
.ti -1c
.RI "std::string \fB_get_json_file\fP ()"
.br
.RI "Get the name of the json file that stores search result\&. "
.ti -1c
.RI "std::string \fB_get_env_file\fP ()"
.br
.RI "Get the name of the file that contains Google Search API and CX Keys\&. "
.ti -1c
.RI "void \fB_set_num_results\fP (const int num_results)"
.br
.RI "Set the number of results to be returned by google search\&. "
.ti -1c
.RI "void \fB_set_start_index\fP (const int start_index)"
.br
.RI "Set the index at which search result starts\&. "
.ti -1c
.RI "void \fB_set_filter\fP (const int filter)"
.br
.RI "Set the check whether duplicate is turned On or Off\&. "
.ti -1c
.RI "void \fB_set_c2coff\fP (const int c2coff)"
.br
.RI "Turn on or off Simplified and Traditional Chinese\&. "
.ti -1c
.RI "void \fB_set_date_restrict\fP (const int date_restrict)"
.br
.RI "Set whether to restrict search based on date\&. "
.ti -1c
.RI "void \fB_set_extra_query\fP (const std::string extra_query)"
.br
.RI "Set extra queries to search for with the search query\&. "
.ti -1c
.RI "void \fB_set_exact_terms\fP (const std::string exact_terms)"
.br
.RI "Set the phrase to include in document in search results\&. "
.ti -1c
.RI "void \fB_set_exclude_terms\fP (const std::string exclude_terms)"
.br
.RI "Set the terms to exclude from documents in search result\&. "
.ti -1c
.RI "void \fB_set_site_search\fP (const std::string site_search)"
.br
.RI "Set the site to always include or exclude from search results\&. "
.ti -1c
.RI "void \fB_set_site_search_filter\fP (const char site_search_filter)"
.br
.RI "Set the value to always include or exclude site from search results\&. "
.ti -1c
.RI "void \fB_set_link_site\fP (const std::string link_site)"
.br
.RI "Set the link to include in each search result\&. "
.ti -1c
.RI "void \fB_set_or_terms\fP (const std::string or_terms)"
.br
.RI "Set the additional terms to include in the document in search result\&. "
.ti -1c
.RI "void \fB_set_date_restrict_type\fP (const std::string date_restrict_type)"
.br
.RI "Set the date restrict type to restrict search results\&. "
.ti -1c
.RI "void \fB_set_low_range\fP (const std::string low_range)"
.br
.RI "Set the query appended to before the search query\&. "
.ti -1c
.RI "void \fB_set_high_range\fP (const std::string high_range)"
.br
.RI "Set the query appended to after the search query\&. "
.ti -1c
.RI "void \fB_set_search_type\fP (const std::string search_type)"
.br
.RI "Set the search type of the query\&. "
.ti -1c
.RI "void \fB_set_filetype\fP (const std::string filetype)"
.br
.RI "Set the filetype of the query\&. "
.ti -1c
.RI "void \fB_set_rights\fP (const std::string right)"
.br
.RI "Set the licensing of the query\&. "
.ti -1c
.RI "void \fB_set_img_size\fP (const std::string img_size)"
.br
.RI "Set the size of the image\&. "
.ti -1c
.RI "void \fB_set_img_type\fP (const std::string img_type)"
.br
.RI "Set the type of the image\&. "
.ti -1c
.RI "void \fB_set_img_color_type\fP (const std::string img_color_type)"
.br
.RI "Set the color type of the image\&. "
.ti -1c
.RI "void \fB_set_img_dominant_color\fP (const std::string img_dominant_color)"
.br
.RI "Set the dominant color of the image\&. "
.ti -1c
.RI "void \fB_set_language\fP (const std::string language)"
.br
.RI "Set the language to search google\&. "
.ti -1c
.RI "void \fB_set_interface_language\fP (const std::string interface_language)"
.br
.RI "Set the user interface language\&. "
.ti -1c
.RI "void \fB_set_user_country\fP (const std::string user_country)"
.br
.RI "Set the country to search from in google\&. "
.ti -1c
.RI "void \fB_set_result_country\fP (const std::string result_country)"
.br
.RI "Set the country to search for in google\&. "
.ti -1c
.RI "void \fB_set_safe\fP (const std::string safe)"
.br
.RI "Set the safe search\&. "
.ti -1c
.RI "void \fB_set_sort\fP (const std::string sort)"
.br
.RI "Set the sort order\&. "
.ti -1c
.RI "void \fB_set_response_file\fP (const std::string json_file)"
.br
.RI "Set the json file to save search result\&. "
.ti -1c
.RI "void \fB_set_env_file\fP (const std::string env_file)"
.br
.RI "Set the name of env file that contains secret keys\&. "
.ti -1c
.RI "void \fB_search_google\fP (const std::string query, const std::string json_file)"
.br
.RI "Search the google based on given query\&. "
.ti -1c
.RI "void \fB_get_result\fP (const int result_index, const bool title, const bool snippet, const bool link, const bool image, const std::string filename)"
.br
.RI "Parse Json file and retrive relevant information\&. "
.in -1c
.SS "Data Fields"

.in +1c
.ti -1c
.RI "int \fB_num_results\fP"
.br
.ti -1c
.RI "int \fB_start_index\fP"
.br
.ti -1c
.RI "int \fB_filter\fP"
.br
.ti -1c
.RI "int \fB_c2coff\fP"
.br
.ti -1c
.RI "int \fB_date_restrict\fP"
.br
.ti -1c
.RI "std::string \fB_extra_query\fP"
.br
.ti -1c
.RI "std::string \fB_exact_terms\fP"
.br
.ti -1c
.RI "std::string \fB_exclude_terms\fP"
.br
.ti -1c
.RI "std::string \fB_site_search\fP"
.br
.ti -1c
.RI "std::string \fB_site_search_filter\fP"
.br
.ti -1c
.RI "std::string \fB_link_site\fP"
.br
.ti -1c
.RI "std::string \fB_or_terms\fP"
.br
.ti -1c
.RI "std::string \fB_date_restrict_type\fP"
.br
.ti -1c
.RI "std::string \fB_low_range\fP"
.br
.ti -1c
.RI "std::string \fB_high_range\fP"
.br
.ti -1c
.RI "std::string \fB_search_type\fP"
.br
.ti -1c
.RI "std::string \fB_filetype\fP"
.br
.ti -1c
.RI "std::string \fB_rights\fP"
.br
.ti -1c
.RI "std::string \fB_img_size\fP"
.br
.ti -1c
.RI "std::string \fB_img_type\fP"
.br
.ti -1c
.RI "std::string \fB_img_color_type\fP"
.br
.ti -1c
.RI "std::string \fB_img_dominant_color\fP"
.br
.ti -1c
.RI "std::string \fB_language\fP"
.br
.ti -1c
.RI "std::string \fB_interface_language\fP"
.br
.ti -1c
.RI "std::string \fB_user_country\fP"
.br
.ti -1c
.RI "std::string \fB_result_country\fP"
.br
.ti -1c
.RI "std::string \fB_safe\fP"
.br
.ti -1c
.RI "std::string \fB_sort\fP"
.br
.ti -1c
.RI "std::string \fB_search_terms\fP"
.br
.ti -1c
.RI "std::string \fB_search_url\fP"
.br
.ti -1c
.RI "std::string \fB_json_file\fP"
.br
.ti -1c
.RI "std::string \fB_env_file\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "GoogleSearch::GoogleSearch (const std::string search_terms = \fC''\fP, const int num_results = \fC0\fP, const int start_index = \fC\-1\fP, const int filter = \fC0\fP, const int c2coff = \fC0\fP, const int date_restrict = \fC0\fP, const std::string extra_query = \fC''\fP, const std::string exact_terms = \fC''\fP, const std::string exclude_terms = \fC''\fP, const std::string site_search = \fC''\fP, const std::string site_search_filter = \fC''\fP, const std::string link_site = \fC''\fP, const std::string or_terms = \fC''\fP, const std::string date_restrict_type = \fC''\fP, const std::string low_range = \fC''\fP, const std::string high_range = \fC''\fP, const std::string search_type = \fC''\fP, const std::string filetype = \fC''\fP, const std::string rights = \fC''\fP, const std::string img_size = \fC''\fP, const std::string img_type = \fC''\fP, const std::string img_color_type = \fC''\fP, const std::string img_dominant_color = \fC''\fP, const std::string language = \fC''\fP, const std::string interface_language = \fC''\fP, const std::string user_country = \fC''\fP, const std::string result_country = \fC''\fP, const std::string safe = \fC''\fP, const std::string sort = \fC''\fP, const std::string json_file = \fC'json_files/search_result\&.json'\fP, const std::string env_file = \fC'secret_files/\&.env'\fP)"

.PP
Class Constructor\&. Initializes class variables and constructs the search url\&. 
.PP
\fBParameters\fP
.RS 4
\fIsearch_terms\fP Query to search for on google 
.br
\fInum_results\fP Number of Results to return 
.br
\fIstart_index\fP Position to start from when getting search results 
.br
\fIfilter\fP turn on or off duplicate content 
.br
\fIc2coff\fP turn on or off Simplified and Traditional Chinese in search 
.br
\fIdate_restrict\fP Whether to restrict search based on dates 
.br
\fIextra_query\fP Extra queries to include in the search 
.br
\fIexact_terms\fP A phrase to include in documents of the search 
.br
\fIexclude_terms\fP A word or phrase to exclude from the search 
.br
\fIsite_search\fP A given site which should always be included or excluded from results\&. Based on \fIsite_search_filter\fP 
.br
\fIsite_search_filter\fP Whether to Include or exclude the sites specified in \fIsite_search\fP 
.br
\fIlink_site\fP Specifies a link that should be in all search results 
.br
\fIor_terms\fP Additional search terms to include in documents in search 
.br
\fIdate_restrict_type\fP Restrict results based on date 
.br
\fIlow_range\fP Query terms to append before a query 
.br
\fIhigh_range\fP QUery terms to append after a query 
.br
\fIsearch_type\fP Specifies the search type\&. Eg: 'image' 
.br
\fIfiletype\fP Restricts results to files of a specified extension 
.br
\fIrights\fP Filters based on licensing 
.br
\fIimg_size\fP Returns images of specified size 
.br
\fIimg_type\fP Returns image of a type 
.br
\fIimg_color_type\fP Returns black and white, grayscale, transparent, or color images 
.br
\fIimg_dominant_color\fP Returns images of a specific dominant color 
.br
\fIlanguage\fP Language to search google in\&. Defualt is 'English' 
.br
\fIinterface_language\fP Sets the user interface language 
.br
\fIuser_country\fP Country to search from in google 
.br
\fIresult_country\fP Country to search for in google 
.br
\fIsafe\fP Whether to show explicit results\&. 
.br
\fIsort\fP Return results in specific order 
.br
\fIjson_file\fP Name of the json file to store search result 
.br
\fIenv_file\fP Name of the env file that contains Google Search API and CX Keys 
.RE
.PP

.SS "GoogleSearch::~GoogleSearch ()"

.PP
Class Destructor\&. Deinitializes the class variables\&. 
.SH "Member Function Documentation"
.PP 
.SS "int GoogleSearch::_get_c2coff ()"

.PP
Check whether Simplified and Traditional Chinese Search is turned On or Off\&. 
.PP
\fBReturns\fP
.RS 4
Integer specifying if Simplified and Traditional Chinese Search is on or off 
.RE
.PP

.SS "int GoogleSearch::_get_date_restrict ()"

.PP
Check whether search is restricted by date\&. 
.PP
\fBReturns\fP
.RS 4
Integer specifying if search is restricted by date 
.RE
.PP

.SS "std::string GoogleSearch::_get_date_restrict_type ()"

.PP
Get the date restricting the search results\&. 
.PP
\fBReturns\fP
.RS 4
String of date restricting the search results 
.RE
.PP

.SS "std::string GoogleSearch::_get_env_file ()"

.PP
Get the name of the file that contains Google Search API and CX Keys\&. 
.PP
\fBReturns\fP
.RS 4
String of env file name 
.RE
.PP

.SS "std::string GoogleSearch::_get_exact_terms ()"

.PP
Get the extra terms each document will include when searching\&. 
.PP
\fBReturns\fP
.RS 4
String of extra terms 
.RE
.PP

.SS "std::string GoogleSearch::_get_exclude_terms ()"

.PP
Get the word which is excluded from appearing in documents from search result\&. 
.PP
\fBReturns\fP
.RS 4
String of excluded terms 
.RE
.PP

.SS "std::string GoogleSearch::_get_extra_query ()"

.PP
Get the extra queries in the search\&. 
.PP
\fBReturns\fP
.RS 4
String of extra queries in the search 
.RE
.PP

.SS "std::string GoogleSearch::_get_filetype ()"

.PP
Get the filetype of the query\&. 
.PP
\fBReturns\fP
.RS 4
String of filetype 
.RE
.PP

.SS "int GoogleSearch::_get_filter ()"

.PP
Check whether duplicate is turned On or Off\&. 
.PP
\fBReturns\fP
.RS 4
Integer specifying if duplicate content is on or off 
.RE
.PP

.SS "std::string GoogleSearch::_get_high_range ()"

.PP
Get the query appended to after the search query\&. 
.PP
\fBReturns\fP
.RS 4
String of query appended to after the search query 
.RE
.PP

.SS "std::string GoogleSearch::_get_img_color_type ()"

.PP
Get the color type of the image\&. 
.PP
\fBReturns\fP
.RS 4
String of image color type 
.RE
.PP

.SS "std::string GoogleSearch::_get_img_dominant_color ()"

.PP
Get the dominant color of the image\&. 
.PP
\fBReturns\fP
.RS 4
String of image dominant color 
.RE
.PP

.SS "std::string GoogleSearch::_get_img_size ()"

.PP
Get the size of the image\&. 
.PP
\fBReturns\fP
.RS 4
String of image size 
.RE
.PP

.SS "std::string GoogleSearch::_get_img_type ()"

.PP
Get the type of the image\&. 
.PP
\fBReturns\fP
.RS 4
String of image type 
.RE
.PP

.SS "std::string GoogleSearch::_get_interface_language ()"

.PP
Get the user interface language\&. 
.PP
\fBReturns\fP
.RS 4
String of user interface language 
.RE
.PP

.SS "std::string GoogleSearch::_get_json_file ()"

.PP
Get the name of the json file that stores search result\&. 
.PP
\fBReturns\fP
.RS 4
String of json file name 
.RE
.PP

.SS "std::string GoogleSearch::_get_language ()"

.PP
Get the language to search google\&. 
.PP
\fBReturns\fP
.RS 4
String of language 
.RE
.PP

.SS "std::string GoogleSearch::_get_link_site ()"

.PP
Get the link included in each result\&. 
.PP
\fBReturns\fP
.RS 4
String of link 
.RE
.PP

.SS "std::string GoogleSearch::_get_low_range ()"

.PP
Get the query appended to before the search query\&. 
.PP
\fBReturns\fP
.RS 4
String of query appended to before the search query 
.RE
.PP

.SS "int GoogleSearch::_get_num_results ()"

.PP
Number of results to be returned by google search\&. 
.PP
\fBReturns\fP
.RS 4
Integer of number of results 
.RE
.PP

.SS "std::string GoogleSearch::_get_or_terms ()"

.PP
Get the extra terms included in documents in search result\&. 
.PP
\fBReturns\fP
.RS 4
String of extra terms 
.RE
.PP

.SS "std::string GoogleSearch::_get_query ()"

.PP
Get the query used to search on google\&. 
.PP
\fBReturns\fP
.RS 4
String of search query 
.RE
.PP

.SS "void GoogleSearch::_get_result (const int result_index = \fC0\fP, const bool title = \fCfalse\fP, const bool snippet = \fCfalse\fP, const bool link = \fCfalse\fP, const bool image = \fCfalse\fP, const std::string filename = \fC'json_files/search_result\&.json'\fP)"

.PP
Parse Json file and retrive relevant information\&. 
.PP
\fBParameters\fP
.RS 4
\fIresult_index\fP Index of individual result to parse 
.br
\fItitle\fP Get Title 
.br
\fIsnippet\fP Get Snippet 
.br
\fIlink\fP Get Link 
.br
\fIimage\fP Get Image 
.br
\fIfilename\fP Name of the file to retrive response data from 
.RE
.PP

.SS "std::string GoogleSearch::_get_result_country ()"

.PP
Get the country to search for in google\&. 
.PP
\fBReturns\fP
.RS 4
String of country 
.RE
.PP

.SS "std::string GoogleSearch::_get_rights ()"

.PP
Get the licensing of the query\&. 
.PP
\fBReturns\fP
.RS 4
String of licensing 
.RE
.PP

.SS "std::string GoogleSearch::_get_safe ()"

.PP
Get the safe search\&. 
.PP
\fBReturns\fP
.RS 4
String of safe search 
.RE
.PP

.SS "std::string GoogleSearch::_get_search_type ()"

.PP
Get the search type of the query\&. 
.PP
\fBReturns\fP
.RS 4
String of search type 
.RE
.PP

.SS "std::string GoogleSearch::_get_search_url ()"

.PP
Get the constructed url used to query google\&. 
.PP
\fBReturns\fP
.RS 4
String of constructed url 
.RE
.PP

.SS "std::string GoogleSearch::_get_site_search ()"

.PP
Get the site to always include or exclude when searching a query\&. 
.PP
\fBReturns\fP
.RS 4
String of site which is always included or excluded 
.RE
.PP

.SS "std::string GoogleSearch::_get_site_search_filter ()"

.PP
Get the value specifying is site should always be included or excluded when searching\&. 
.PP
\fBReturns\fP
.RS 4
String of filter specifying whether site is included or excluded 
.RE
.PP

.SS "std::string GoogleSearch::_get_sort ()"

.PP
Get the sort order\&. 
.PP
\fBReturns\fP
.RS 4
String of sort order 
.RE
.PP

.SS "int GoogleSearch::_get_start_index ()"

.PP
Index at which search result starts\&. 
.PP
\fBReturns\fP
.RS 4
Integer of start index 
.RE
.PP

.SS "std::string GoogleSearch::_get_user_country ()"

.PP
Get the country to search from in google\&. 
.PP
\fBReturns\fP
.RS 4
String of country 
.RE
.PP

.SS "void GoogleSearch::_search_google (const std::string query, const std::string json_file = \fC'json_files/search_result\&.json'\fP)"

.PP
Search the google based on given query\&. 
.PP
\fBParameters\fP
.RS 4
\fIquery\fP Query to search on google 
.br
\fIjson_file\fP Name of the file to save response data 
.RE
.PP

.SS "void GoogleSearch::_set_c2coff (const int c2coff)"

.PP
Turn on or off Simplified and Traditional Chinese\&. 
.PP
\fBParameters\fP
.RS 4
\fIc2coff\fP Integer Specifying to turn on or off Simplified and Traditional Chinese 
.RE
.PP

.SS "void GoogleSearch::_set_date_restrict (const int date_restrict)"

.PP
Set whether to restrict search based on date\&. 
.PP
\fBParameters\fP
.RS 4
\fIdate_restrict\fP Whether to restrict search based on date 
.RE
.PP

.SS "void GoogleSearch::_set_date_restrict_type (const std::string date_restrict_type)"

.PP
Set the date restrict type to restrict search results\&. 
.PP
\fBParameters\fP
.RS 4
\fIdate_restrict_type\fP String of date restrict type to restrict search results 
.RE
.PP

.SS "void GoogleSearch::_set_env_file (const std::string env_file)"

.PP
Set the name of env file that contains secret keys\&. 
.PP
\fBParameters\fP
.RS 4
\fIenv_file\fP Name of the file that contains Google Search API and CX Keys 
.RE
.PP

.SS "void GoogleSearch::_set_exact_terms (const std::string exact_terms)"

.PP
Set the phrase to include in document in search results\&. 
.PP
\fBParameters\fP
.RS 4
\fIexact_terms\fP String of phrase to include in document in search results 
.RE
.PP

.SS "void GoogleSearch::_set_exclude_terms (const std::string exclude_terms)"

.PP
Set the terms to exclude from documents in search result\&. 
.PP
\fBParameters\fP
.RS 4
\fIexclude_terms\fP String of terms to exclude from documents in search result 
.RE
.PP

.SS "void GoogleSearch::_set_extra_query (const std::string extra_query)"

.PP
Set extra queries to search for with the search query\&. 
.PP
\fBParameters\fP
.RS 4
\fIextra_query\fP String of extra queries to search for with the search query 
.RE
.PP

.SS "void GoogleSearch::_set_filetype (const std::string filetype)"

.PP
Set the filetype of the query\&. 
.PP
\fBParameters\fP
.RS 4
\fIfiletype\fP String of filetype of the query 
.RE
.PP

.SS "void GoogleSearch::_set_filter (const int filter)"

.PP
Set the check whether duplicate is turned On or Off\&. 
.PP
\fBParameters\fP
.RS 4
\fIfilter\fP Integer specifying if duplicate content is on or off 
.RE
.PP

.SS "void GoogleSearch::_set_high_range (const std::string high_range)"

.PP
Set the query appended to after the search query\&. 
.PP
\fBParameters\fP
.RS 4
\fIhigh_range\fP String of query appended to after the search query 
.RE
.PP

.SS "void GoogleSearch::_set_img_color_type (const std::string img_color_type)"

.PP
Set the color type of the image\&. 
.PP
\fBParameters\fP
.RS 4
\fIimg_color_type\fP String of color type of the image 
.RE
.PP

.SS "void GoogleSearch::_set_img_dominant_color (const std::string img_dominant_color)"

.PP
Set the dominant color of the image\&. 
.PP
\fBParameters\fP
.RS 4
\fIimg_dominant_color\fP String of dominant color of the image 
.RE
.PP

.SS "void GoogleSearch::_set_img_size (const std::string img_size)"

.PP
Set the size of the image\&. 
.PP
\fBParameters\fP
.RS 4
\fIimg_size\fP String of size of the image 
.RE
.PP

.SS "void GoogleSearch::_set_img_type (const std::string img_type)"

.PP
Set the type of the image\&. 
.PP
\fBParameters\fP
.RS 4
\fIimg_type\fP String of type of the image 
.RE
.PP

.SS "void GoogleSearch::_set_interface_language (const std::string interface_language)"

.PP
Set the user interface language\&. 
.PP
\fBParameters\fP
.RS 4
\fIinterface_language\fP String of user interface language 
.RE
.PP

.SS "void GoogleSearch::_set_language (const std::string language)"

.PP
Set the language to search google\&. 
.PP
\fBParameters\fP
.RS 4
\fIlanguage\fP String of language to search google 
.RE
.PP

.SS "void GoogleSearch::_set_link_site (const std::string link_site)"

.PP
Set the link to include in each search result\&. 
.PP
\fBParameters\fP
.RS 4
\fIlink_site\fP String of link to include in each search result 
.RE
.PP

.SS "void GoogleSearch::_set_low_range (const std::string low_range)"

.PP
Set the query appended to before the search query\&. 
.PP
\fBParameters\fP
.RS 4
\fIlow_range\fP String of query appended to before the search query 
.RE
.PP

.SS "void GoogleSearch::_set_num_results (const int num_results)"

.PP
Set the number of results to be returned by google search\&. 
.PP
\fBParameters\fP
.RS 4
\fInum_results\fP Integer of number of results 
.RE
.PP

.SS "void GoogleSearch::_set_or_terms (const std::string or_terms)"

.PP
Set the additional terms to include in the document in search result\&. 
.PP
\fBParameters\fP
.RS 4
\fIor_terms\fP String of additional terms to include in documents 
.RE
.PP

.SS "void GoogleSearch::_set_response_file (const std::string json_file)"

.PP
Set the json file to save search result\&. 
.PP
\fBParameters\fP
.RS 4
\fIjson_file\fP Name of the file to save response data 
.RE
.PP

.SS "void GoogleSearch::_set_result_country (const std::string result_country)"

.PP
Set the country to search for in google\&. 
.PP
\fBParameters\fP
.RS 4
\fIresult_country\fP String of country to search for in google 
.RE
.PP

.SS "void GoogleSearch::_set_rights (const std::string right)"

.PP
Set the licensing of the query\&. 
.PP
\fBParameters\fP
.RS 4
\fIrights\fP String of licensing of the query 
.RE
.PP

.SS "void GoogleSearch::_set_safe (const std::string safe)"

.PP
Set the safe search\&. 
.PP
\fBParameters\fP
.RS 4
\fIsafe\fP String of safe search 
.RE
.PP

.SS "void GoogleSearch::_set_search_type (const std::string search_type)"

.PP
Set the search type of the query\&. 
.PP
\fBParameters\fP
.RS 4
\fIsearch_type\fP String of search type of the query 
.RE
.PP

.SS "void GoogleSearch::_set_site_search (const std::string site_search)"

.PP
Set the site to always include or exclude from search results\&. 
.PP
\fBParameters\fP
.RS 4
\fIsite_search\fP String of site to always include or exclude from search results 
.RE
.PP

.SS "void GoogleSearch::_set_site_search_filter (const char site_search_filter)"

.PP
Set the value to always include or exclude site from search results\&. 
.PP
\fBParameters\fP
.RS 4
\fIsite_search_filter\fP Char of value specifying to include or exclude a site 
.RE
.PP

.SS "void GoogleSearch::_set_sort (const std::string sort)"

.PP
Set the sort order\&. 
.PP
\fBParameters\fP
.RS 4
\fIsort\fP String of sort order 
.RE
.PP

.SS "void GoogleSearch::_set_start_index (const int start_index)"

.PP
Set the index at which search result starts\&. 
.PP
\fBParameters\fP
.RS 4
\fIstart_index\fP Integer of start index 
.RE
.PP

.SS "void GoogleSearch::_set_user_country (const std::string user_country)"

.PP
Set the country to search from in google\&. 
.PP
\fBParameters\fP
.RS 4
\fIuser_country\fP String of country to search from in google 
.RE
.PP

.SH "Field Documentation"
.PP 
.SS "int GoogleSearch::_c2coff"

.SS "int GoogleSearch::_date_restrict"

.SS "std::string GoogleSearch::_date_restrict_type"

.SS "std::string GoogleSearch::_env_file"

.SS "std::string GoogleSearch::_exact_terms"

.SS "std::string GoogleSearch::_exclude_terms"

.SS "std::string GoogleSearch::_extra_query"

.SS "std::string GoogleSearch::_filetype"

.SS "int GoogleSearch::_filter"

.SS "std::string GoogleSearch::_high_range"

.SS "std::string GoogleSearch::_img_color_type"

.SS "std::string GoogleSearch::_img_dominant_color"

.SS "std::string GoogleSearch::_img_size"

.SS "std::string GoogleSearch::_img_type"

.SS "std::string GoogleSearch::_interface_language"

.SS "std::string GoogleSearch::_json_file"

.SS "std::string GoogleSearch::_language"

.SS "std::string GoogleSearch::_link_site"

.SS "std::string GoogleSearch::_low_range"

.SS "int GoogleSearch::_num_results"

.SS "std::string GoogleSearch::_or_terms"

.SS "std::string GoogleSearch::_result_country"

.SS "std::string GoogleSearch::_rights"

.SS "std::string GoogleSearch::_safe"

.SS "std::string GoogleSearch::_search_terms"

.SS "std::string GoogleSearch::_search_type"

.SS "std::string GoogleSearch::_search_url"

.SS "std::string GoogleSearch::_site_search"

.SS "std::string GoogleSearch::_site_search_filter"

.SS "std::string GoogleSearch::_sort"

.SS "int GoogleSearch::_start_index"

.SS "std::string GoogleSearch::_user_country"


.SH "Author"
.PP 
Generated automatically by Doxygen for AI Ecosystem from the source code\&.
