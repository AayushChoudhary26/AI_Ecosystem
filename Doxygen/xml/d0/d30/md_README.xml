<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="d0/d30/md_README" kind="page">
    <compoundname>md_README</compoundname>
    <title>AI Ecosystem: A Framework for NLP-driven Task Completion</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><anchor id="d0/d30/md_README_1autotoc_md12"/> <ulink url="https://opensource.org/licenses/MIT"><image type="html" name="https://img.shields.io/badge/License-MIT-blue.svg" alt="License: MIT" inline="yes"></image>
</ulink></para>
<sect1 id="d0/d30/md_README_1autotoc_md13">
<title>Description</title>
<para>AI Ecosystem is an evolving project that aims to build a hierarchical model structure capable of efficiently completing human-like tasks on a computer using natural language processing (NLP). It tackles the challenge of bridging the gap between complex human instructions and automated task execution by developing a system that understands, interprets, and translates natural language commands into actionable steps.</para>
</sect1>
<sect1 id="d0/d30/md_README_1autotoc_md14">
<title>Features</title>
<para><itemizedlist>
<listitem><para><bold>Hierarchical Model Structure</bold>: The project is structured as a hierarchy of models, allowing for increasingly complex tasks to be broken down into smaller, more manageable subtasks.</para>
</listitem><listitem><para><bold>Natural Language Understanding</bold>: Models are trained to understand natural language instructions, including nuances, context, and implicit information.</para>
</listitem><listitem><para><bold>Task Decomposition</bold>: Complex tasks are automatically decomposed into a series of smaller, executable steps.</para>
</listitem><listitem><para><bold>Multi-Modal Capabilities</bold>: The system will eventually support interaction with various data sources and interfaces, including files, websites, and APIs.</para>
</listitem><listitem><para><bold>Modular Design</bold>: The project is designed to be modular, allowing for easy addition and customization of new models and task functionalities.</para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="d0/d30/md_README_1autotoc_md15">
<title>Installation</title>
<para><bold>Note:</bold> AI Ecosystem is currently in its early stages of development, and the installation process is not yet finalized. This README will be updated with instructions once the project is more mature.</para>
</sect1>
<sect1 id="d0/d30/md_README_1autotoc_md16">
<title>Usage</title>
<para>The project has been updated to provide individual classes for specific tasks. You can now use these classes to perform their intended operations, such as file manipulation or performing Google searches. Below is a brief overview of the available classes and their usage:</para>
<sect2 id="d0/d30/md_README_1autotoc_md17">
<title>File Class</title>
<para><itemizedlist>
<listitem><para>Use the <computeroutput><ref refid="db/d30/classFile" kindref="compound">File</ref></computeroutput> class for file manipulation tasks like creating or reading files.</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="d0/d30/md_README_1autotoc_md18">
<title>GoogleSearch Class</title>
<para><itemizedlist>
<listitem><para>The <computeroutput><ref refid="dc/d02/classGoogleSearch" kindref="compound">GoogleSearch</ref></computeroutput> class allows you to perform searches on Google and store the results in a file.</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="d0/d30/md_README_1autotoc_md19">
<title>Example Usage</title>
<para>Hereâ€™s an example of how to use the <computeroutput><ref refid="db/d30/classFile" kindref="compound">File</ref></computeroutput> and <computeroutput><ref refid="dc/d02/classGoogleSearch" kindref="compound">GoogleSearch</ref></computeroutput> classes together:</para>
<para><programlisting filename=".py"><codeline><highlight class="keyword">from</highlight><highlight class="normal"><sp/>modules.angel_configure<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>GoogleSearch,<sp/>File</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">file<sp/>=<sp/><ref refid="db/d30/classFile" kindref="compound">File</ref>()</highlight></codeline>
<codeline><highlight class="normal">google<sp/>=<sp/><ref refid="dc/d02/classGoogleSearch" kindref="compound">GoogleSearch</ref>()</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">json_directory<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;json_files/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">json_file<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;search_result.json&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>Create<sp/>a<sp/>file<sp/>to<sp/>store<sp/>the<sp/>search<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">file.create_file(json_file,<sp/>json_directory)</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>Perform<sp/>a<sp/>Google<sp/>search<sp/>and<sp/>save<sp/>the<sp/>result<sp/>in<sp/>the<sp/>created<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">google._search_google(</highlight><highlight class="stringliteral">&quot;Something&quot;</highlight><highlight class="normal">,<sp/>json_directory<sp/>+<sp/>json_file)</highlight></codeline>
</programlisting></para>
<para>In this example:<itemizedlist>
<listitem><para>A file is created in the specified directory using the <computeroutput><ref refid="db/d30/classFile" kindref="compound">File</ref></computeroutput> class.</para>
</listitem><listitem><para>The <computeroutput><ref refid="dc/d02/classGoogleSearch" kindref="compound">GoogleSearch</ref></computeroutput> class is used to perform a Google search and store the search results in the created file.</para>
</listitem></itemizedlist>
</para>
<para><bold>Note:</bold> Further updates and instructions will be provided as the project evolves.</para>
</sect2>
</sect1>
<sect1 id="d0/d30/md_README_1autotoc_md20">
<title>Contributing</title>
<para>Contributions are welcome! If you&apos;re interested in contributing to the development of AI Ecosystem, please feel free to reach out to the project maintainers or submit a pull request.</para>
</sect1>
<sect1 id="d0/d30/md_README_1autotoc_md21">
<title>Disclaimer</title>
<para>This project is still under active development. Features and functionality may be subject to change. Right now Gemini API key is used for nlp to task convergence, but will change in the future to operate smaller local models to ensure privacy and latency free task completions</para>
</sect1>
<sect1 id="d0/d30/md_README_1autotoc_md22">
<title>Future Plans</title>
<para><itemizedlist>
<listitem><para><bold>Expansion of Model Capabilities</bold>: The project will continuously expand the capabilities of its models to handle a broader range of tasks and scenarios.</para>
</listitem><listitem><para><bold>Integration with External APIs</bold>: Integration with external APIs will enhance the project&apos;s ability to interact with real-world data and systems.</para>
</listitem><listitem><para><bold>User-Friendly Interface</bold>: The project will strive to provide a user-friendly interface for interacting with the system and specifying tasks.</para>
</listitem></itemizedlist>
</para>
<para>We believe AI Ecosystem has the potential to revolutionize how humans interact with computers, enabling seamless automation of complex tasks through natural language. </para>
</sect1>
    </detaileddescription>
    <location file="README.md"/>
  </compounddef>
</doxygen>
