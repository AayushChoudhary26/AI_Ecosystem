<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="db/d30/classFile" kind="class" language="C++" prot="public">
    <compoundname>File</compoundname>
    <includes refid="d9/d27/file__configure_8h" local="no">file_configure.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="db/d30/classFile_1ae039af5807fc385f41b60644725d15d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>File::File</definition>
        <argsstring>()</argsstring>
        <name>File</name>
        <qualifiedname>File::File</qualifiedname>
        <briefdescription>
<para>Class Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/file_configure.h" line="12" column="9" bodyfile="cpp_files/program_files/file_configure.cpp" bodystart="3" bodyend="3"/>
      </memberdef>
      <memberdef kind="function" id="db/d30/classFile_1ac704ebdf5f57d7a1c5ddf409d797fb69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>File::~File</definition>
        <argsstring>()</argsstring>
        <name>~File</name>
        <qualifiedname>File::~File</qualifiedname>
        <briefdescription>
<para>Class Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/file_configure.h" line="15" column="9" bodyfile="cpp_files/program_files/file_configure.cpp" bodystart="4" bodyend="4"/>
      </memberdef>
      <memberdef kind="function" id="db/d30/classFile_1aca829fa2a9eb1e3166325c26113b64a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; std::string, std::string &gt;</type>
        <definition>std::map&lt; std::string, std::string &gt; File::_class_info</definition>
        <argsstring>()</argsstring>
        <name>_class_info</name>
        <qualifiedname>File::_class_info</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/file_configure.h" line="17" column="18"/>
      </memberdef>
      <memberdef kind="function" id="db/d30/classFile_1a723967366f9b4eeb3e43962bdc91dbd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void File::_create_file</definition>
        <argsstring>(const std::string filename, const std::string file_path)</argsstring>
        <name>_create_file</name>
        <qualifiedname>File::_create_file</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>file_path</declname>
        </param>
        <briefdescription>
<para>Function to create a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path of the file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/file_configure.h" line="22" column="14" bodyfile="cpp_files/program_files/file_configure.cpp" bodystart="73" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="db/d30/classFile_1aee963ae86073e1199f232218e826e0cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void File::_write_file</definition>
        <argsstring>(const std::string filename, const std::string content, const std::string file_path)</argsstring>
        <name>_write_file</name>
        <qualifiedname>File::_write_file</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>content</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>file_path</declname>
        </param>
        <briefdescription>
<para>Function to write to a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>content</parametername>
</parameternamelist>
<parameterdescription>
<para>Content of the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path of the file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/file_configure.h" line="31" column="14" bodyfile="cpp_files/program_files/file_configure.cpp" bodystart="84" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="db/d30/classFile_1a4c19bcf4802b91cfbfeb45d87c488c42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string File::_read_file</definition>
        <argsstring>(const std::string filename, const std::string file_path)</argsstring>
        <name>_read_file</name>
        <qualifiedname>File::_read_file</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>file_path</declname>
        </param>
        <briefdescription>
<para>Function to read a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path of the file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Content of the file </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/file_configure.h" line="41" column="21" bodyfile="cpp_files/program_files/file_configure.cpp" bodystart="98" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="db/d30/classFile_1a6a3bcacf86cf46621dff7bf117a5c17a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void File::_delete_file</definition>
        <argsstring>(const std::string filename, const std::string file_path)</argsstring>
        <name>_delete_file</name>
        <qualifiedname>File::_delete_file</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>file_path</declname>
        </param>
        <briefdescription>
<para>Function to delete a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path of the file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/file_configure.h" line="49" column="14" bodyfile="cpp_files/program_files/file_configure.cpp" bodystart="112" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="db/d30/classFile_1a32378c4d0669fa2ca78e6bf1f626326f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void File::_rename_file</definition>
        <argsstring>(const std::string filename, const std::string new_filename, const std::string file_path)</argsstring>
        <name>_rename_file</name>
        <qualifiedname>File::_rename_file</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>new_filename</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>file_path</declname>
        </param>
        <briefdescription>
<para>Function to rename a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_filename</parametername>
</parameternamelist>
<parameterdescription>
<para>New name of the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path of the file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/file_configure.h" line="58" column="14" bodyfile="cpp_files/program_files/file_configure.cpp" bodystart="120" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="db/d30/classFile_1aa52321227bfc877fa28604667cdbfa1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void File::_move_file</definition>
        <argsstring>(const std::string filename, const std::string new_path, const std::string file_path)</argsstring>
        <name>_move_file</name>
        <qualifiedname>File::_move_file</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>new_path</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>file_path</declname>
        </param>
        <briefdescription>
<para>Function to move a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_path</parametername>
</parameternamelist>
<parameterdescription>
<para>New path of the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path of the file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/file_configure.h" line="68" column="14" bodyfile="cpp_files/program_files/file_configure.cpp" bodystart="131" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="db/d30/classFile_1a175cf0f3fec5117b8e18c0037d658656" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void File::_copy_file</definition>
        <argsstring>(const std::string filename, const std::string new_path, const std::string file_path)</argsstring>
        <name>_copy_file</name>
        <qualifiedname>File::_copy_file</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>new_path</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>file_path</declname>
        </param>
        <briefdescription>
<para>Function to copy a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_path</parametername>
</parameternamelist>
<parameterdescription>
<para>New path of the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path of the file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/file_configure.h" line="78" column="14" bodyfile="cpp_files/program_files/file_configure.cpp" bodystart="142" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="db/d30/classFile_1a6d339880cb2d39dcc068841b9a68496a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool File::_check_file</definition>
        <argsstring>(const std::string filename, const std::string file_path)</argsstring>
        <name>_check_file</name>
        <qualifiedname>File::_check_file</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>file_path</declname>
        </param>
        <briefdescription>
<para>Function to check if it is a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path of the file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if it is a file, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/file_configure.h" line="88" column="14" bodyfile="cpp_files/program_files/file_configure.cpp" bodystart="162" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="db/d30/classFile_1a3ef81a3faf9cf11388825bc4103a9b6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void File::_hide_file</definition>
        <argsstring>(const std::string filename, const std::string file_path)</argsstring>
        <name>_hide_file</name>
        <qualifiedname>File::_hide_file</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>file_path</declname>
        </param>
        <briefdescription>
<para>Function to hide a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path of the file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/file_configure.h" line="96" column="14" bodyfile="cpp_files/program_files/file_configure.cpp" bodystart="181" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="db/d30/classFile_1aaa9df660becc699f79140061975bdf2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void File::_unhide_file</definition>
        <argsstring>(const std::string filename, const std::string file_path)</argsstring>
        <name>_unhide_file</name>
        <qualifiedname>File::_unhide_file</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>file_path</declname>
        </param>
        <briefdescription>
<para>Function to unhide a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path of the file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/file_configure.h" line="104" column="14" bodyfile="cpp_files/program_files/file_configure.cpp" bodystart="191" bodyend="199"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Class for file manipulation. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="cpp_files/header_files/file_configure.h" line="9" column="1" bodyfile="cpp_files/header_files/file_configure.h" bodystart="9" bodyend="108"/>
    <listofallmembers>
      <member refid="db/d30/classFile_1a6d339880cb2d39dcc068841b9a68496a" prot="public" virt="non-virtual"><scope>File</scope><name>_check_file</name></member>
      <member refid="db/d30/classFile_1aca829fa2a9eb1e3166325c26113b64a0" prot="public" virt="non-virtual"><scope>File</scope><name>_class_info</name></member>
      <member refid="db/d30/classFile_1a175cf0f3fec5117b8e18c0037d658656" prot="public" virt="non-virtual"><scope>File</scope><name>_copy_file</name></member>
      <member refid="db/d30/classFile_1a723967366f9b4eeb3e43962bdc91dbd9" prot="public" virt="non-virtual"><scope>File</scope><name>_create_file</name></member>
      <member refid="db/d30/classFile_1a6a3bcacf86cf46621dff7bf117a5c17a" prot="public" virt="non-virtual"><scope>File</scope><name>_delete_file</name></member>
      <member refid="db/d30/classFile_1a3ef81a3faf9cf11388825bc4103a9b6a" prot="public" virt="non-virtual"><scope>File</scope><name>_hide_file</name></member>
      <member refid="db/d30/classFile_1aa52321227bfc877fa28604667cdbfa1c" prot="public" virt="non-virtual"><scope>File</scope><name>_move_file</name></member>
      <member refid="db/d30/classFile_1a4c19bcf4802b91cfbfeb45d87c488c42" prot="public" virt="non-virtual"><scope>File</scope><name>_read_file</name></member>
      <member refid="db/d30/classFile_1a32378c4d0669fa2ca78e6bf1f626326f" prot="public" virt="non-virtual"><scope>File</scope><name>_rename_file</name></member>
      <member refid="db/d30/classFile_1aaa9df660becc699f79140061975bdf2f" prot="public" virt="non-virtual"><scope>File</scope><name>_unhide_file</name></member>
      <member refid="db/d30/classFile_1aee963ae86073e1199f232218e826e0cd" prot="public" virt="non-virtual"><scope>File</scope><name>_write_file</name></member>
      <member refid="db/d30/classFile_1ae039af5807fc385f41b60644725d15d0" prot="public" virt="non-virtual"><scope>File</scope><name>File</name></member>
      <member refid="db/d30/classFile_1ac704ebdf5f57d7a1c5ddf409d797fb69" prot="public" virt="non-virtual"><scope>File</scope><name>~File</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
