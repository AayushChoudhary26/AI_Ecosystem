<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="dc/d02/classGoogleSearch" kind="class" language="C++" prot="public">
    <compoundname>GoogleSearch</compoundname>
    <includes refid="d0/df3/search__configure_8h" local="no">search_configure.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a98daa8954a1ecddb897270c218eb419d" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::__api_key</definition>
        <argsstring></argsstring>
        <name>__api_key</name>
        <qualifiedname>GoogleSearch::__api_key</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="16" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1ac07d3f626bffad9023dfdb8b0ef1a63d" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::__cx_key</definition>
        <argsstring></argsstring>
        <name>__cx_key</name>
        <qualifiedname>GoogleSearch::__cx_key</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="17" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a1300cfe007aaece3f1ea44df1f01045a" prot="private" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GoogleSearch::__filter[2]</definition>
        <argsstring>[2]</argsstring>
        <name>__filter</name>
        <qualifiedname>GoogleSearch::__filter</qualifiedname>
        <initializer>= {0, 1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="19" column="19" bodyfile="cpp_files/header_files/search_configure.h" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1ac289c9930bbfa44c7ee9598f6c9d0d13" prot="private" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GoogleSearch::__c2coff[2]</definition>
        <argsstring>[2]</argsstring>
        <name>__c2coff</name>
        <qualifiedname>GoogleSearch::__c2coff</qualifiedname>
        <initializer>= {0, 1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="20" column="19" bodyfile="cpp_files/header_files/search_configure.h" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a34feda39439a501d00463e200d755dba" prot="private" static="no" mutable="no">
        <type>const char</type>
        <definition>const char GoogleSearch::__site_search_filter[2]</definition>
        <argsstring>[2]</argsstring>
        <name>__site_search_filter</name>
        <qualifiedname>GoogleSearch::__site_search_filter</qualifiedname>
        <initializer>= {&apos;i&apos;, &apos;e&apos;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="22" column="20" bodyfile="cpp_files/header_files/search_configure.h" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a63ba3e6af3d245d58396abbfcac13f38" prot="private" static="no" mutable="no">
        <type>const char</type>
        <definition>const char GoogleSearch::__date_restrict[4]</definition>
        <argsstring>[4]</argsstring>
        <name>__date_restrict</name>
        <qualifiedname>GoogleSearch::__date_restrict</qualifiedname>
        <initializer>= {&apos;d&apos;, &apos;w&apos;, &apos;m&apos;, &apos;y&apos;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="23" column="20" bodyfile="cpp_files/header_files/search_configure.h" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a30ee6718066d5250971331ea321c5a5c" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string GoogleSearch::__available_languages[36]</definition>
        <argsstring>[36]</argsstring>
        <name>__available_languages</name>
        <qualifiedname>GoogleSearch::__available_languages</qualifiedname>
        <initializer>= {&quot;lang_ar&quot;, &quot;lang_bg&quot;, &quot;lang_ca&quot;, &quot;lang_cs&quot;, &quot;lang_da&quot;, &quot;lang_de&quot;, &quot;lang_el&quot;, &quot;lang_en&quot;, &quot;lang_es&quot;, &quot;lang_et&quot;, &quot;lang_fi&quot;, &quot;lang_fr&quot;, &quot;lang_hr&quot;, &quot;lang_hu&quot;, &quot;lang_id&quot;, &quot;lang_is&quot;, &quot;lang_it&quot;, &quot;lang_iw&quot;, &quot;lang_ja&quot;, &quot;lang_ko&quot;, &quot;lang_lt&quot;, &quot;lang_lv&quot;, &quot;lang_nl&quot;, &quot;lang_no&quot;, &quot;lang_pl&quot;, &quot;lang_pt&quot;, &quot;lang_ro&quot;, &quot;lang_ru&quot;, &quot;lang_sk&quot;, &quot;lang_sl&quot;, &quot;lang_sr&quot;, &quot;lang_sv&quot;, &quot;lang_tr&quot;, &quot;lang_zh-CN&quot;, &quot;lang_zh-TW&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="25" column="27" bodyfile="cpp_files/header_files/search_configure.h" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a81153d09959bea871f4b072db3988bf8" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string GoogleSearch::__available_interface_languages[83]</definition>
        <argsstring>[83]</argsstring>
        <name>__available_interface_languages</name>
        <qualifiedname>GoogleSearch::__available_interface_languages</qualifiedname>
        <initializer>= {&quot;af&quot;, &quot;sq&quot;, &quot;sm&quot;, &quot;ar&quot;, &quot;az&quot;, &quot;eu&quot;, &quot;be&quot;, &quot;bn&quot;, &quot;bh&quot;, &quot;bs&quot;, &quot;bg&quot;, &quot;ca&quot;, &quot;zh-CN&quot;, &quot;zh-TW&quot;, &quot;hr&quot;, &quot;cs&quot;, &quot;da&quot;, &quot;nl&quot;, &quot;en&quot;, &quot;eo&quot;, &quot;et&quot;, &quot;fo&quot;, &quot;fi&quot;, &quot;fr&quot;, &quot;fy&quot;, &quot;gl&quot;, &quot;ka&quot;, &quot;de&quot;, &quot;el&quot;, &quot;gu&quot;, &quot;iw&quot;, &quot;hi&quot;, &quot;hu&quot;, &quot;is&quot;, &quot;id&quot;, &quot;ia&quot;, &quot;ga&quot;, &quot;it&quot;, &quot;ja&quot;, &quot;jw&quot;, &quot;kn&quot;, &quot;ko&quot;, &quot;la&quot;, &quot;lv&quot;, &quot;lt&quot;, &quot;mk&quot;, &quot;ms&quot;, &quot;ml&quot;, &quot;mt&quot;, &quot;mr&quot;, &quot;ne&quot;, &quot;no&quot;, &quot;nn&quot;, &quot;oc&quot;, &quot;fa&quot;, &quot;pl&quot;, &quot;pt-BR&quot;, &quot;pt-PT&quot;, &quot;pa&quot;, &quot;ro&quot;, &quot;ru&quot;, &quot;gd&quot;, &quot;sr&quot;, &quot;si&quot;, &quot;sk&quot;, &quot;sl&quot;, &quot;es&quot;, &quot;su&quot;, &quot;sw&quot;, &quot;sv&quot;, &quot;tl&quot;, &quot;ta&quot;, &quot;te&quot;, &quot;th&quot;, &quot;ti&quot;, &quot;tr&quot;, &quot;uk&quot;, &quot;ur&quot;, &quot;uz&quot;, &quot;vi&quot;, &quot;cy&quot;, &quot;xh&quot;, &quot;zu&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="26" column="27" bodyfile="cpp_files/header_files/search_configure.h" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a4d579bbfd5dfc35bedeb02bf42c94126" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string GoogleSearch::__available_user_countries[249]</definition>
        <argsstring>[249]</argsstring>
        <name>__available_user_countries</name>
        <qualifiedname>GoogleSearch::__available_user_countries</qualifiedname>
        <initializer>= {&quot;af&quot;, &quot;al&quot;, &quot;dz&quot;, &quot;as&quot;, &quot;ad&quot;, &quot;ao&quot;, &quot;ai&quot;, &quot;aq&quot;, &quot;ag&quot;, &quot;ar&quot;, &quot;am&quot;, &quot;aw&quot;, &quot;au&quot;, &quot;at&quot;, &quot;az&quot;, &quot;bs&quot;, &quot;bh&quot;, &quot;bd&quot;, &quot;bb&quot;, &quot;by&quot;, &quot;be&quot;, &quot;bz&quot;, &quot;bj&quot;, &quot;bm&quot;, &quot;bt&quot;, &quot;bo&quot;, &quot;ba&quot;, &quot;bw&quot;, &quot;bv&quot;, &quot;br&quot;, &quot;io&quot;, &quot;bn&quot;, &quot;bg&quot;, &quot;bf&quot;, &quot;bi&quot;, &quot;kh&quot;, &quot;cm&quot;, &quot;ca&quot;, &quot;cv&quot;, &quot;ky&quot;, &quot;cf&quot;, &quot;td&quot;, &quot;cl&quot;, &quot;cn&quot;, &quot;cx&quot;, &quot;cc&quot;, &quot;co&quot;, &quot;km&quot;, &quot;cg&quot;, &quot;cd&quot;, &quot;ck&quot;, &quot;cr&quot;, &quot;ci&quot;, &quot;hr&quot;, &quot;cu&quot;, &quot;cy&quot;, &quot;cz&quot;, &quot;dk&quot;, &quot;dj&quot;, &quot;dm&quot;, &quot;do&quot;, &quot;ec&quot;, &quot;eg&quot;, &quot;sv&quot;, &quot;gq&quot;, &quot;er&quot;, &quot;ee&quot;, &quot;et&quot;, &quot;fk&quot;, &quot;fo&quot;, &quot;fj&quot;, &quot;fi&quot;, &quot;fr&quot;, &quot;gf&quot;, &quot;pf&quot;, &quot;tf&quot;, &quot;ga&quot;, &quot;gm&quot;, &quot;ge&quot;, &quot;de&quot;, &quot;gh&quot;, &quot;gi&quot;, &quot;gr&quot;, &quot;gl&quot;, &quot;gd&quot;, &quot;gp&quot;, &quot;gu&quot;, &quot;gt&quot;, &quot;gn&quot;, &quot;gw&quot;, &quot;gy&quot;, &quot;ht&quot;, &quot;hm&quot;, &quot;va&quot;, &quot;hn&quot;, &quot;hk&quot;, &quot;hu&quot;, &quot;is&quot;, &quot;in&quot;, &quot;id&quot;, &quot;ir&quot;, &quot;iq&quot;, &quot;ie&quot;, &quot;il&quot;, &quot;it&quot;, &quot;jm&quot;, &quot;jp&quot;, &quot;jo&quot;, &quot;kz&quot;, &quot;ke&quot;, &quot;ki&quot;, &quot;kp&quot;, &quot;kr&quot;, &quot;kw&quot;, &quot;kg&quot;, &quot;la&quot;, &quot;lv&quot;, &quot;lb&quot;, &quot;ls&quot;, &quot;lr&quot;, &quot;ly&quot;, &quot;li&quot;, &quot;lt&quot;, &quot;lu&quot;, &quot;mo&quot;, &quot;mk&quot;, &quot;mg&quot;, &quot;mw&quot;, &quot;my&quot;, &quot;mv&quot;, &quot;ml&quot;, &quot;mt&quot;, &quot;mh&quot;, &quot;mq&quot;, &quot;mr&quot;, &quot;mu&quot;, &quot;yt&quot;, &quot;mx&quot;, &quot;fm&quot;, &quot;md&quot;, &quot;mc&quot;, &quot;mn&quot;, &quot;ms&quot;, &quot;ma&quot;, &quot;mz&quot;, &quot;mm&quot;, &quot;na&quot;, &quot;nr&quot;, &quot;np&quot;, &quot;nl&quot;, &quot;an&quot;, &quot;nc&quot;, &quot;nz&quot;, &quot;ni&quot;, &quot;ne&quot;, &quot;ng&quot;, &quot;nu&quot;, &quot;nf&quot;, &quot;mp&quot;, &quot;no&quot;, &quot;om&quot;, &quot;pk&quot;, &quot;pw&quot;, &quot;ps&quot;, &quot;pa&quot;, &quot;pg&quot;, &quot;py&quot;, &quot;pe&quot;, &quot;ph&quot;, &quot;pn&quot;, &quot;pl&quot;, &quot;pt&quot;, &quot;pr&quot;, &quot;qa&quot;, &quot;re&quot;, &quot;ro&quot;, &quot;ru&quot;, &quot;rw&quot;, &quot;sh&quot;, &quot;kn&quot;, &quot;lc&quot;, &quot;pm&quot;, &quot;vc&quot;, &quot;ws&quot;, &quot;sm&quot;, &quot;st&quot;, &quot;sa&quot;, &quot;sn&quot;, &quot;cs&quot;, &quot;sc&quot;, &quot;sl&quot;, &quot;sg&quot;, &quot;sk&quot;, &quot;si&quot;, &quot;sb&quot;, &quot;so&quot;, &quot;za&quot;, &quot;gs&quot;, &quot;es&quot;, &quot;lk&quot;, &quot;sd&quot;, &quot;sr&quot;, &quot;sj&quot;, &quot;sz&quot;, &quot;se&quot;, &quot;ch&quot;, &quot;sy&quot;, &quot;tw&quot;, &quot;tj&quot;, &quot;tz&quot;, &quot;th&quot;, &quot;tl&quot;, &quot;tg&quot;, &quot;tk&quot;, &quot;to&quot;, &quot;tt&quot;, &quot;tn&quot;, &quot;tr&quot;, &quot;tm&quot;, &quot;tc&quot;, &quot;tv&quot;, &quot;ug&quot;, &quot;ua&quot;, &quot;ae&quot;, &quot;uk&quot;, &quot;us&quot;, &quot;um&quot;, &quot;uy&quot;, &quot;uz&quot;, &quot;vu&quot;, &quot;ve&quot;, &quot;vn&quot;, &quot;vg&quot;, &quot;vi&quot;, &quot;wf&quot;, &quot;eh&quot;, &quot;ye&quot;, &quot;zm&quot;, &quot;zw&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="27" column="27" bodyfile="cpp_files/header_files/search_configure.h" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a56be3faaa36d19d1dc10685d020c4a60" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string GoogleSearch::__available_result_countries[249]</definition>
        <argsstring>[249]</argsstring>
        <name>__available_result_countries</name>
        <qualifiedname>GoogleSearch::__available_result_countries</qualifiedname>
        <initializer>= {&quot;countryAF&quot;, &quot;countryAL&quot;, &quot;countryDZ&quot;, &quot;countryAS&quot;, &quot;countryAD&quot;, &quot;countryAO&quot;, &quot;countryAI&quot;, &quot;countryAQ&quot;, &quot;countryAG&quot;, &quot;countryAR&quot;, &quot;countryAM&quot;, &quot;countryAW&quot;, &quot;countryAU&quot;, &quot;countryAT&quot;, &quot;countryAZ&quot;, &quot;countryBS&quot;, &quot;countryBH&quot;, &quot;countryBD&quot;, &quot;countryBB&quot;, &quot;countryBY&quot;, &quot;countryBE&quot;, &quot;countryBZ&quot;, &quot;countryBJ&quot;, &quot;countryBM&quot;, &quot;countryBT&quot;, &quot;countryBO&quot;, &quot;countryBA&quot;, &quot;countryBW&quot;, &quot;countryBV&quot;, &quot;countryBR&quot;, &quot;countryIO&quot;, &quot;countryBN&quot;, &quot;countryBG&quot;, &quot;countryBF&quot;, &quot;countryBI&quot;, &quot;countryKH&quot;, &quot;countryCM&quot;, &quot;countryCA&quot;, &quot;countryCV&quot;, &quot;countryKY&quot;, &quot;countryCF&quot;, &quot;countryTD&quot;, &quot;countryCL&quot;, &quot;countryCN&quot;, &quot;countryCX&quot;, &quot;countryCC&quot;, &quot;countryCO&quot;, &quot;countryKM&quot;, &quot;countryCG&quot;, &quot;countryCD&quot;, &quot;countryCK&quot;, &quot;countryCR&quot;, &quot;countryCI&quot;, &quot;countryHR&quot;, &quot;countryCU&quot;, &quot;countryCY&quot;, &quot;countryCZ&quot;, &quot;countryDK&quot;, &quot;countryDJ&quot;, &quot;countryDM&quot;, &quot;countryDO&quot;, &quot;countryTP&quot;, &quot;countryEC&quot;, &quot;countryEG&quot;, &quot;countrySV&quot;, &quot;countryGQ&quot;, &quot;countryER&quot;, &quot;countryEE&quot;, &quot;countryET&quot;, &quot;countryEU&quot;, &quot;countryFK&quot;, &quot;countryFO&quot;, &quot;countryFJ&quot;, &quot;countryFI&quot;, &quot;countryFR&quot;, &quot;countryFX&quot;, &quot;countryGF&quot;, &quot;countryPF&quot;, &quot;countryTF&quot;, &quot;countryGA&quot;, &quot;countryGM&quot;, &quot;countryGE&quot;, &quot;countryDE&quot;, &quot;countryGH&quot;, &quot;countryGI&quot;, &quot;countryGR&quot;, &quot;countryGL&quot;, &quot;countryGD&quot;, &quot;countryGP&quot;, &quot;countryGU&quot;, &quot;countryGT&quot;, &quot;countryGN&quot;, &quot;countryGW&quot;, &quot;countryGY&quot;, &quot;countryHT&quot;, &quot;countryHM&quot;, &quot;countryVA&quot;, &quot;countryHN&quot;, &quot;countryHK&quot;, &quot;countryHU&quot;, &quot;countryIS&quot;, &quot;countryIN&quot;, &quot;countryID&quot;, &quot;countryIR&quot;, &quot;countryIQ&quot;, &quot;countryIE&quot;, &quot;countryIL&quot;, &quot;countryIT&quot;, &quot;countryJM&quot;, &quot;countryJP&quot;, &quot;countryJO&quot;, &quot;countryKZ&quot;, &quot;countryKE&quot;, &quot;countryKI&quot;, &quot;countryKP&quot;, &quot;countryKR&quot;, &quot;countryKW&quot;, &quot;countryKG&quot;, &quot;countryLA&quot;, &quot;countryLV&quot;, &quot;countryLB&quot;, &quot;countryLS&quot;, &quot;countryLR&quot;, &quot;countryLY&quot;, &quot;countryLI&quot;, &quot;countryLT&quot;, &quot;countryLU&quot;, &quot;countryMO&quot;, &quot;countryMK&quot;, &quot;countryMG&quot;, &quot;countryMW&quot;, &quot;countryMY&quot;, &quot;countryMV&quot;, &quot;countryML&quot;, &quot;countryMT&quot;, &quot;countryMH&quot;, &quot;countryMQ&quot;, &quot;countryMR&quot;, &quot;countryMU&quot;, &quot;countryYT&quot;, &quot;countryMX&quot;, &quot;countryFM&quot;, &quot;countryMD&quot;, &quot;countryMC&quot;, &quot;countryMN&quot;, &quot;countryMS&quot;, &quot;countryMA&quot;, &quot;countryMZ&quot;, &quot;countryMM&quot;, &quot;countryNA&quot;, &quot;countryNR&quot;, &quot;countryNP&quot;, &quot;countryNL&quot;, &quot;countryAN&quot;, &quot;countryNC&quot;, &quot;countryNZ&quot;, &quot;countryNI&quot;, &quot;countryNE&quot;, &quot;countryNG&quot;, &quot;countryNU&quot;, &quot;countryNF&quot;, &quot;countryMP&quot;, &quot;countryNO&quot;, &quot;countryOM&quot;, &quot;countryPK&quot;, &quot;countryPW&quot;, &quot;countryPS&quot;, &quot;countryPA&quot;, &quot;countryPG&quot;, &quot;countryPY&quot;, &quot;countryPE&quot;, &quot;countryPH&quot;, &quot;countryPN&quot;, &quot;countryPL&quot;, &quot;countryPT&quot;, &quot;countryPR&quot;, &quot;countryQA&quot;, &quot;countryRE&quot;, &quot;countryRO&quot;, &quot;countryRU&quot;, &quot;countryRW&quot;, &quot;countrySH&quot;, &quot;countryKN&quot;, &quot;countryLC&quot;, &quot;countryPM&quot;, &quot;countryVC&quot;, &quot;countryWS&quot;, &quot;countrySM&quot;, &quot;countryST&quot;, &quot;countrySA&quot;, &quot;countrySN&quot;, &quot;countryCS&quot;, &quot;countrySC&quot;, &quot;countrySL&quot;, &quot;countrySG&quot;, &quot;countrySK&quot;, &quot;countrySI&quot;, &quot;countrySB&quot;, &quot;countrySO&quot;, &quot;countryZA&quot;, &quot;countryGS&quot;, &quot;countryES&quot;, &quot;countryLK&quot;, &quot;countrySD&quot;, &quot;countrySR&quot;, &quot;countrySJ&quot;, &quot;countrySZ&quot;, &quot;countrySE&quot;, &quot;countryCH&quot;, &quot;countrySY&quot;, &quot;countryTW&quot;, &quot;countryTJ&quot;, &quot;countryTZ&quot;, &quot;countryTH&quot;, &quot;countryTG&quot;, &quot;countryTK&quot;, &quot;countryTO&quot;, &quot;countryTT&quot;, &quot;countryTN&quot;, &quot;countryTR&quot;, &quot;countryTM&quot;, &quot;countryTC&quot;, &quot;countryTV&quot;, &quot;countryUG&quot;, &quot;countryUA&quot;, &quot;countryAE&quot;, &quot;countryUK&quot;, &quot;countryUS&quot;, &quot;countryUM&quot;, &quot;countryUY&quot;, &quot;countryUZ&quot;, &quot;countryVU&quot;, &quot;countryVE&quot;, &quot;countryVN&quot;, &quot;countryVG&quot;, &quot;countryVI&quot;, &quot;countryWF&quot;, &quot;countryEH&quot;, &quot;countryYE&quot;, &quot;countryYU&quot;, &quot;countryZM&quot;, &quot;countryZW&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="28" column="27" bodyfile="cpp_files/header_files/search_configure.h" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a88dda82c4b7ed9cc5701fc8def0811dd" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string GoogleSearch::__available_filetypes[64]</definition>
        <argsstring>[64]</argsstring>
        <name>__available_filetypes</name>
        <qualifiedname>GoogleSearch::__available_filetypes</qualifiedname>
        <initializer>= {&quot;.pdf&quot;, &quot;.ps&quot;, &quot;.csv&quot;, &quot;.epub&quot;, &quot;.kmz&quot;, &quot;.gpx&quot;, &quot;.hwp&quot;, &quot;.htm&quot;, &quot;.html&quot;, &quot;.xls&quot;, &quot;.xlsx&quot;, &quot;.ppt&quot;, &quot;.pptx&quot;, &quot;.doc&quot;, &quot;.docx&quot;, &quot;.odp&quot;, &quot;.ods&quot;, &quot;.odt&quot;, &quot;.rtf&quot;, &quot;.svg&quot;, &quot;.tex&quot;, &quot;.txt&quot;, &quot;.text&quot;, &quot;.bas&quot;, &quot;.c&quot;, &quot;.cc&quot;, &quot;.cpp&quot;, &quot;.cxx&quot;, &quot;.h&quot;, &quot;.hpp&quot;, &quot;.cs&quot;, &quot;.java&quot;, &quot;.pl&quot;, &quot;.py&quot;, &quot;.wml&quot;, &quot;.wap&quot;, &quot;.xml&quot;, &quot;BMP&quot;, &quot;GIF&quot;, &quot;JPEG&quot;, &quot;PNG&quot;, &quot;WebP&quot;, &quot;SVG&quot;, &quot;3GP&quot;, &quot;3G2&quot;, &quot;ASF&quot;, &quot;AVI&quot;, &quot;DivX&quot;, &quot;M2V&quot;, &quot;M3U&quot;, &quot;M3U8&quot;, &quot;M4V&quot;, &quot;MKV&quot;, &quot;MOV&quot;, &quot;MP4&quot;, &quot;MPEG&quot;, &quot;OGV&quot;, &quot;QVT&quot;, &quot;RAM&quot;, &quot;RM&quot;, &quot;VOB&quot;, &quot;WebM&quot;, &quot;WMV&quot;, &quot;XAP&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="29" column="27" bodyfile="cpp_files/header_files/search_configure.h" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1aac304bc26d9ec2837183d10127329c3a" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string GoogleSearch::__safe[2]</definition>
        <argsstring>[2]</argsstring>
        <name>__safe</name>
        <qualifiedname>GoogleSearch::__safe</qualifiedname>
        <initializer>= {&quot;active&quot;, &quot;off&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="30" column="27" bodyfile="cpp_files/header_files/search_configure.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a1a85dc0736f2c004abff5ad909c819f7" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string GoogleSearch::__sort[2]</definition>
        <argsstring>[2]</argsstring>
        <name>__sort</name>
        <qualifiedname>GoogleSearch::__sort</qualifiedname>
        <initializer>= {&quot;date-sdate:a&quot;, &quot;date-sdate:d&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="31" column="27" bodyfile="cpp_files/header_files/search_configure.h" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1ad6335ffcd6d5e85c2be4fd83057ba46e" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string GoogleSearch::__search_type[1]</definition>
        <argsstring>[1]</argsstring>
        <name>__search_type</name>
        <qualifiedname>GoogleSearch::__search_type</qualifiedname>
        <initializer>= {&quot;image&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="32" column="27" bodyfile="cpp_files/header_files/search_configure.h" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a408d1bf4c74308b949d2040b1967be63" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string GoogleSearch::__rights[5]</definition>
        <argsstring>[5]</argsstring>
        <name>__rights</name>
        <qualifiedname>GoogleSearch::__rights</qualifiedname>
        <initializer>= {&quot;cc_publicdomain&quot;, &quot;cc_attribute&quot;, &quot;cc_sharealike&quot;, &quot;cc_noncommercial&quot;, &quot;cc_nonderived&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="33" column="27" bodyfile="cpp_files/header_files/search_configure.h" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1aeb6f3294471d0c8034fda318a70f4405" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string GoogleSearch::__image_sizes[7]</definition>
        <argsstring>[7]</argsstring>
        <name>__image_sizes</name>
        <qualifiedname>GoogleSearch::__image_sizes</qualifiedname>
        <initializer>= {&quot;huge&quot;, &quot;icon&quot;, &quot;large&quot;, &quot;medium&quot;, &quot;small&quot;, &quot;xlarge&quot;, &quot;xxlarge&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="34" column="27" bodyfile="cpp_files/header_files/search_configure.h" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a739ec47bdcbd3a589dee821b3d902536" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string GoogleSearch::__image_types[6]</definition>
        <argsstring>[6]</argsstring>
        <name>__image_types</name>
        <qualifiedname>GoogleSearch::__image_types</qualifiedname>
        <initializer>= {&quot;clipart&quot;, &quot;face&quot;, &quot;lineart&quot;, &quot;stock&quot;, &quot;photo&quot;, &quot;animated&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="35" column="27" bodyfile="cpp_files/header_files/search_configure.h" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a330870fba4271affe59a6f63c15b4094" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string GoogleSearch::__image_color_types[4]</definition>
        <argsstring>[4]</argsstring>
        <name>__image_color_types</name>
        <qualifiedname>GoogleSearch::__image_color_types</qualifiedname>
        <initializer>= {&quot;color&quot;, &quot;gray&quot;, &quot;mono&quot;, &quot;trans&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="36" column="27" bodyfile="cpp_files/header_files/search_configure.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a0ba6fab02f3cb30ee96b2f121f9fd563" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string GoogleSearch::__image_dominant_color_types[12]</definition>
        <argsstring>[12]</argsstring>
        <name>__image_dominant_color_types</name>
        <qualifiedname>GoogleSearch::__image_dominant_color_types</qualifiedname>
        <initializer>= {&quot;black&quot;, &quot;blue&quot;, &quot;brown&quot;, &quot;gray&quot;, &quot;green&quot;, &quot;orange&quot;, &quot;pink&quot;, &quot;purple&quot;, &quot;red&quot;, &quot;teal&quot;, &quot;white&quot;, &quot;yellow&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="37" column="27" bodyfile="cpp_files/header_files/search_configure.h" bodystart="37" bodyend="37"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1add8f08252792bf5935cb4cdd7e4a9e52" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int GoogleSearch::_num_results</definition>
        <argsstring></argsstring>
        <name>_num_results</name>
        <qualifiedname>GoogleSearch::_num_results</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="111" column="13" bodyfile="cpp_files/header_files/search_configure.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1aade376956739e38697db945217c6e26e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int GoogleSearch::_start_index</definition>
        <argsstring></argsstring>
        <name>_start_index</name>
        <qualifiedname>GoogleSearch::_start_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="112" column="13" bodyfile="cpp_files/header_files/search_configure.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a3b92453b743b42ca564f9c7f63bbfbdf" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int GoogleSearch::_filter</definition>
        <argsstring></argsstring>
        <name>_filter</name>
        <qualifiedname>GoogleSearch::_filter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="113" column="13" bodyfile="cpp_files/header_files/search_configure.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a963b6fb88739d6c53a68cf83743b5b2c" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int GoogleSearch::_c2coff</definition>
        <argsstring></argsstring>
        <name>_c2coff</name>
        <qualifiedname>GoogleSearch::_c2coff</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="114" column="13" bodyfile="cpp_files/header_files/search_configure.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a426792c425f540a4a47f858e17dbe814" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int GoogleSearch::_date_restrict</definition>
        <argsstring></argsstring>
        <name>_date_restrict</name>
        <qualifiedname>GoogleSearch::_date_restrict</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="115" column="13" bodyfile="cpp_files/header_files/search_configure.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a97d8105bc53ca85200ecbfa5368ec1be" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_extra_query</definition>
        <argsstring></argsstring>
        <name>_extra_query</name>
        <qualifiedname>GoogleSearch::_extra_query</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="117" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a415b481dff493617dc74f3cebc158c41" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_exact_terms</definition>
        <argsstring></argsstring>
        <name>_exact_terms</name>
        <qualifiedname>GoogleSearch::_exact_terms</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="118" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a53cc91aca1c6d22892b1f523d1f496dd" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_exclude_terms</definition>
        <argsstring></argsstring>
        <name>_exclude_terms</name>
        <qualifiedname>GoogleSearch::_exclude_terms</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="119" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a98f861535626ae36fddf48d0edafec38" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_site_search</definition>
        <argsstring></argsstring>
        <name>_site_search</name>
        <qualifiedname>GoogleSearch::_site_search</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="120" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1aa7d8f14d9f457b2f867227b64c455156" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_site_search_filter</definition>
        <argsstring></argsstring>
        <name>_site_search_filter</name>
        <qualifiedname>GoogleSearch::_site_search_filter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="121" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a681fb4078142782b6b831374cc53e563" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_link_site</definition>
        <argsstring></argsstring>
        <name>_link_site</name>
        <qualifiedname>GoogleSearch::_link_site</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="122" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a70ce6f6e447c502f318af4758203c212" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_or_terms</definition>
        <argsstring></argsstring>
        <name>_or_terms</name>
        <qualifiedname>GoogleSearch::_or_terms</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="123" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a4d3aefbc47afb2d6810cca05b5218490" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_date_restrict_type</definition>
        <argsstring></argsstring>
        <name>_date_restrict_type</name>
        <qualifiedname>GoogleSearch::_date_restrict_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="124" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1ad7c730a789c68cf2d43ef2940a9e2782" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_low_range</definition>
        <argsstring></argsstring>
        <name>_low_range</name>
        <qualifiedname>GoogleSearch::_low_range</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="125" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1ad7cf2752704c74fc776cd01c1e93d458" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_high_range</definition>
        <argsstring></argsstring>
        <name>_high_range</name>
        <qualifiedname>GoogleSearch::_high_range</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="126" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a0725fca91cd4d4e3d6c64230217e1ca1" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_search_type</definition>
        <argsstring></argsstring>
        <name>_search_type</name>
        <qualifiedname>GoogleSearch::_search_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="127" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a01ad09d2343c7c463a7bd9eabc8193a7" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_filetype</definition>
        <argsstring></argsstring>
        <name>_filetype</name>
        <qualifiedname>GoogleSearch::_filetype</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="128" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1aac430e898129eb52123d395dabf61cf5" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_rights</definition>
        <argsstring></argsstring>
        <name>_rights</name>
        <qualifiedname>GoogleSearch::_rights</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="129" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1ae3f6fad4b77eafc33bb823c5c1645725" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_img_size</definition>
        <argsstring></argsstring>
        <name>_img_size</name>
        <qualifiedname>GoogleSearch::_img_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="130" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1ad43951cacc95e359c8de5d93f85383e2" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_img_type</definition>
        <argsstring></argsstring>
        <name>_img_type</name>
        <qualifiedname>GoogleSearch::_img_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="131" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1afcf1e9c1fde84fb98f2dd8c97664fab7" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_img_color_type</definition>
        <argsstring></argsstring>
        <name>_img_color_type</name>
        <qualifiedname>GoogleSearch::_img_color_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="132" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1af027f8cc01832e01b58efac8adcfb35c" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_img_dominant_color</definition>
        <argsstring></argsstring>
        <name>_img_dominant_color</name>
        <qualifiedname>GoogleSearch::_img_dominant_color</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="133" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1aff508ea13cba6fac1bda7f0bb5306acd" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_language</definition>
        <argsstring></argsstring>
        <name>_language</name>
        <qualifiedname>GoogleSearch::_language</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="134" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a897edbac97e63e3ee0f7017ee8b2b20e" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_interface_language</definition>
        <argsstring></argsstring>
        <name>_interface_language</name>
        <qualifiedname>GoogleSearch::_interface_language</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="135" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a33f5a0e1a9eb6c0b6254b2bd77dffba8" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_user_country</definition>
        <argsstring></argsstring>
        <name>_user_country</name>
        <qualifiedname>GoogleSearch::_user_country</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="136" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a9b2164a468f084a8c40bf03ecdf97e35" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_result_country</definition>
        <argsstring></argsstring>
        <name>_result_country</name>
        <qualifiedname>GoogleSearch::_result_country</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="137" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1af076bbdeaa3a1a565b2da1824b2f6d11" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_safe</definition>
        <argsstring></argsstring>
        <name>_safe</name>
        <qualifiedname>GoogleSearch::_safe</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="138" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a021c89de5adc99b9780a526f64e12934" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_sort</definition>
        <argsstring></argsstring>
        <name>_sort</name>
        <qualifiedname>GoogleSearch::_sort</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="139" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a329ad4da7654f1c6d4f0910e43c956bb" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_search_terms</definition>
        <argsstring></argsstring>
        <name>_search_terms</name>
        <qualifiedname>GoogleSearch::_search_terms</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="141" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1aa1203db345c6dcf80029fa7dbcd7300f" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_search_url</definition>
        <argsstring></argsstring>
        <name>_search_url</name>
        <qualifiedname>GoogleSearch::_search_url</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="142" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a6a4e64d55fc8a16befdc922c9d3a8f00" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_json_file</definition>
        <argsstring></argsstring>
        <name>_json_file</name>
        <qualifiedname>GoogleSearch::_json_file</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="143" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d02/classGoogleSearch_1a8508e9f23702bd9eede5c3b06f10dd2d" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_env_file</definition>
        <argsstring></argsstring>
        <name>_env_file</name>
        <qualifiedname>GoogleSearch::_env_file</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="144" column="21" bodyfile="cpp_files/header_files/search_configure.h" bodystart="144" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1ad531115114c75878c21f6a9f19c2ff95" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::__trim</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>__trim</name>
        <qualifiedname>GoogleSearch::__trim</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Function to trim whitespace from a string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to be trimmed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The trimmed string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="44" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="121" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a2c4085d7f060ae3f2225e31a3baa8301" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; std::string, std::string &gt;</type>
        <definition>std::unordered_map&lt; std::string, std::string &gt; GoogleSearch::__load_env_file</definition>
        <argsstring>(const std::string &amp;filePath)</argsstring>
        <name>__load_env_file</name>
        <qualifiedname>GoogleSearch::__load_env_file</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Function to load the .env file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the .env file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A map of key-value pairs </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="51" column="28" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="133" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a94c1203a6d4daeee9f9f3eecc074b0f2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::__get_env_value</definition>
        <argsstring>(const std::unordered_map&lt; std::string, std::string &gt; &amp;envMap, const std::string &amp;key)</argsstring>
        <name>__get_env_value</name>
        <qualifiedname>GoogleSearch::__get_env_value</qualifiedname>
        <param>
          <type>const std::unordered_map&lt; std::string, std::string &gt; &amp;</type>
          <declname>envMap</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Function to get a specific value for a key from the map. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>envMap</parametername>
</parameternamelist>
<parameterdescription>
<para>The Unordered map to read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to find </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of the key in env file </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="59" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="172" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1af29d60b9f77127f516c55f5f6d8f22a0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::__get_api_cx</definition>
        <argsstring>(std::string env_filename)</argsstring>
        <name>__get_api_cx</name>
        <qualifiedname>GoogleSearch::__get_api_cx</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>env_filename</declname>
        </param>
        <briefdescription>
<para>Function to load API and CX keys from a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>env_filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file that contains API and CX keys </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="66" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="184" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a07583be7ce040aceadd290bf32a0e69b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::__fetch_json_data</definition>
        <argsstring>(const std::string &amp;url)</argsstring>
        <name>__fetch_json_data</name>
        <qualifiedname>GoogleSearch::__fetch_json_data</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>url</declname>
        </param>
        <briefdescription>
<para>Get json data from the given google custom search url. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>Url to get data from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String of json data </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="86" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="207" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a496dc9981d2674726e1dd5db034d0c82" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::__save_json_data</definition>
        <argsstring>(const std::string json_data, const std::string filename)</argsstring>
        <name>__save_json_data</name>
        <qualifiedname>GoogleSearch::__save_json_data</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>json_data</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Save the result json data to a json file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>json_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Json data to save </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file to save json data in </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="93" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="231" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a4f27a16fb259a1a7a584f564767ebcf3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::__encode_url</definition>
        <argsstring>(const std::string &amp;url)</argsstring>
        <name>__encode_url</name>
        <qualifiedname>GoogleSearch::__encode_url</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>url</declname>
        </param>
        <briefdescription>
<para>Encode Url. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>url to encode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String of Encoded url </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="101" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="243" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1ade4849cbe15f3dbbc881607709e80150" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::__construct_search_url</definition>
        <argsstring>()</argsstring>
        <name>__construct_search_url</name>
        <qualifiedname>GoogleSearch::__construct_search_url</qualifiedname>
        <briefdescription>
<para>Create search url used to search on google, Omiting and Adding appropriate parameters only. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="106" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="262" bodyend="304"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1aaad2a00b332c52a78026bda29e4cd761" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GoogleSearch::__WriteCallBack</definition>
        <argsstring>(void *contents, size_t size, size_t nmemb, std::string *output)</argsstring>
        <name>__WriteCallBack</name>
        <qualifiedname>GoogleSearch::__WriteCallBack</qualifiedname>
        <param>
          <type>void *</type>
          <declname>contents</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nmemb</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Get the total size of the downloaded data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>contents</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer containing the downloaded data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the downloaded data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nmemb</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the downloaded data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to user defined data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Total size of the downloaded data </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="76" column="23" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="195" bodyend="205"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a8ca6a396f3c4520c20a9c9083c4e7f2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GoogleSearch::GoogleSearch</definition>
        <argsstring>(const std::string search_terms, const int num_results, const int start_index, const int filter, const int c2coff, const int date_restrict, const std::string extra_query, const std::string exact_terms, const std::string exclude_terms, const std::string site_search, const std::string site_search_filter, const std::string link_site, const std::string or_terms, const std::string date_restrict_type, const std::string low_range, const std::string high_range, const std::string search_type, const std::string filetype, const std::string rights, const std::string img_size, const std::string img_type, const std::string img_color_type, const std::string img_dominant_color, const std::string language, const std::string interface_language, const std::string user_country, const std::string result_country, const std::string safe, const std::string sort, const std::string json_file, const std::string env_file)</argsstring>
        <name>GoogleSearch</name>
        <qualifiedname>GoogleSearch::GoogleSearch</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>search_terms</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>num_results</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>start_index</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>filter</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>c2coff</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>date_restrict</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>extra_query</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>exact_terms</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>exclude_terms</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>site_search</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>site_search_filter</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>link_site</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>or_terms</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>date_restrict_type</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>low_range</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>high_range</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>search_type</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>filetype</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>rights</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>img_size</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>img_type</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>img_color_type</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>img_dominant_color</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>language</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>interface_language</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>user_country</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>result_country</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>safe</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>sort</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>json_file</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>env_file</declname>
        </param>
        <briefdescription>
<para>Class Constructor. Initializes class variables and constructs the search url. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>search_terms</parametername>
</parameternamelist>
<parameterdescription>
<para>Query to search for on google </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_results</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of Results to return </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Position to start from when getting search results </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>turn on or off duplicate content </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c2coff</parametername>
</parameternamelist>
<parameterdescription>
<para>turn on or off Simplified and Traditional Chinese in search </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>date_restrict</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to restrict search based on dates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>extra_query</parametername>
</parameternamelist>
<parameterdescription>
<para>Extra queries to include in the search </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exact_terms</parametername>
</parameternamelist>
<parameterdescription>
<para>A phrase to include in documents of the search </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exclude_terms</parametername>
</parameternamelist>
<parameterdescription>
<para>A word or phrase to exclude from the search </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>site_search</parametername>
</parameternamelist>
<parameterdescription>
<para>A given site which should always be included or excluded from results. Based on <emphasis>site_search_filter</emphasis> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>site_search_filter</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to Include or exclude the sites specified in <emphasis>site_search</emphasis> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>link_site</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies a link that should be in all search results </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>or_terms</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional search terms to include in documents in search </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>date_restrict_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Restrict results based on date </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>low_range</parametername>
</parameternamelist>
<parameterdescription>
<para>Query terms to append before a query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>high_range</parametername>
</parameternamelist>
<parameterdescription>
<para>QUery terms to append after a query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>search_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the search type. Eg: &quot;image&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filetype</parametername>
</parameternamelist>
<parameterdescription>
<para>Restricts results to files of a specified extension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rights</parametername>
</parameternamelist>
<parameterdescription>
<para>Filters based on licensing </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns images of specified size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns image of a type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_color_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns black and white, grayscale, transparent, or color images </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_dominant_color</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns images of a specific dominant color </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>Language to search google in. Defualt is &apos;English&apos; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interface_language</parametername>
</parameternamelist>
<parameterdescription>
<para>Sets the user interface language </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_country</parametername>
</parameternamelist>
<parameterdescription>
<para>Country to search from in google </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result_country</parametername>
</parameternamelist>
<parameterdescription>
<para>Country to search for in google </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>safe</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to show explicit results. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>Return results in specific order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>json_file</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the json file to store search result </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>env_file</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the env file that contains Google Search API and CX Keys </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="180" column="9" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="3" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1ac6ef9203faf042ea043df3208ae472ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GoogleSearch::~GoogleSearch</definition>
        <argsstring>()</argsstring>
        <name>~GoogleSearch</name>
        <qualifiedname>GoogleSearch::~GoogleSearch</qualifiedname>
        <briefdescription>
<para>Class Destructor. Deinitializes the class variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="218" column="9" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="81" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a03a138b96411ba8903ff84cb62970aa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GoogleSearch::_get_num_results</definition>
        <argsstring>()</argsstring>
        <name>_get_num_results</name>
        <qualifiedname>GoogleSearch::_get_num_results</qualifiedname>
        <briefdescription>
<para>Number of results to be returned by google search. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Integer of number of results </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="224" column="13" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="306" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a9b13414d1131401e103deebc2440d494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GoogleSearch::_get_start_index</definition>
        <argsstring>()</argsstring>
        <name>_get_start_index</name>
        <qualifiedname>GoogleSearch::_get_start_index</qualifiedname>
        <briefdescription>
<para>Index at which search result starts. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Integer of start index </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="228" column="13" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="310" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a8a8164e7364d2a757f9a957e940e2e42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GoogleSearch::_get_filter</definition>
        <argsstring>()</argsstring>
        <name>_get_filter</name>
        <qualifiedname>GoogleSearch::_get_filter</qualifiedname>
        <briefdescription>
<para>Check whether duplicate is turned On or Off. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Integer specifying if duplicate content is on or off </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="232" column="13" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="314" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1aa36b00cb21a4f935ae151076e54784b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GoogleSearch::_get_c2coff</definition>
        <argsstring>()</argsstring>
        <name>_get_c2coff</name>
        <qualifiedname>GoogleSearch::_get_c2coff</qualifiedname>
        <briefdescription>
<para>Check whether Simplified and Traditional Chinese Search is turned On or Off. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Integer specifying if Simplified and Traditional Chinese Search is on or off </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="236" column="13" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="318" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a47fd4dd646a5daf161a13bccf404c879" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GoogleSearch::_get_date_restrict</definition>
        <argsstring>()</argsstring>
        <name>_get_date_restrict</name>
        <qualifiedname>GoogleSearch::_get_date_restrict</qualifiedname>
        <briefdescription>
<para>Check whether search is restricted by date. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Integer specifying if search is restricted by date </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="240" column="13" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="322" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1afbaac5ab5848658477eb17fe423f57db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_query</definition>
        <argsstring>()</argsstring>
        <name>_get_query</name>
        <qualifiedname>GoogleSearch::_get_query</qualifiedname>
        <briefdescription>
<para>Get the query used to search on google. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of search query </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="244" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="326" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1af0ad107510fb8d95b383a9a357882120" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_search_url</definition>
        <argsstring>()</argsstring>
        <name>_get_search_url</name>
        <qualifiedname>GoogleSearch::_get_search_url</qualifiedname>
        <briefdescription>
<para>Get the constructed url used to query google. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of constructed url </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="248" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="330" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1ae0a87c1fb00162479d838a7b8f3df2d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_extra_query</definition>
        <argsstring>()</argsstring>
        <name>_get_extra_query</name>
        <qualifiedname>GoogleSearch::_get_extra_query</qualifiedname>
        <briefdescription>
<para>Get the extra queries in the search. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of extra queries in the search </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="252" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="334" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1ae6e1f94e2473b59caa8ab8561244ff90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_exact_terms</definition>
        <argsstring>()</argsstring>
        <name>_get_exact_terms</name>
        <qualifiedname>GoogleSearch::_get_exact_terms</qualifiedname>
        <briefdescription>
<para>Get the extra terms each document will include when searching. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of extra terms </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="256" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="338" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1ad5de2384cab99a3cc06fb5730401f2e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_exclude_terms</definition>
        <argsstring>()</argsstring>
        <name>_get_exclude_terms</name>
        <qualifiedname>GoogleSearch::_get_exclude_terms</qualifiedname>
        <briefdescription>
<para>Get the word which is excluded from appearing in documents from search result. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of excluded terms </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="260" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="342" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1aebc113b74fd4ea720342c06bdfd71666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_site_search</definition>
        <argsstring>()</argsstring>
        <name>_get_site_search</name>
        <qualifiedname>GoogleSearch::_get_site_search</qualifiedname>
        <briefdescription>
<para>Get the site to always include or exclude when searching a query. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of site which is always included or excluded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="264" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="346" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1ae03ab0b8f25f56e330fc203d6bb97e0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_site_search_filter</definition>
        <argsstring>()</argsstring>
        <name>_get_site_search_filter</name>
        <qualifiedname>GoogleSearch::_get_site_search_filter</qualifiedname>
        <briefdescription>
<para>Get the value specifying is site should always be included or excluded when searching. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of filter specifying whether site is included or excluded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="268" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="350" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1ab6674c07887ad11a3513ec263d32dd87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_link_site</definition>
        <argsstring>()</argsstring>
        <name>_get_link_site</name>
        <qualifiedname>GoogleSearch::_get_link_site</qualifiedname>
        <briefdescription>
<para>Get the link included in each result. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of link </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="272" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="354" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a1085e8f32f2acff42e1410b9a0883d69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_or_terms</definition>
        <argsstring>()</argsstring>
        <name>_get_or_terms</name>
        <qualifiedname>GoogleSearch::_get_or_terms</qualifiedname>
        <briefdescription>
<para>Get the extra terms included in documents in search result. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of extra terms </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="276" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="358" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1aff0ebb4654b5ab08b2e6f5ed0899c5ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_date_restrict_type</definition>
        <argsstring>()</argsstring>
        <name>_get_date_restrict_type</name>
        <qualifiedname>GoogleSearch::_get_date_restrict_type</qualifiedname>
        <briefdescription>
<para>Get the date restricting the search results. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of date restricting the search results </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="280" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="362" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1ac61ebee0ad419ba4086037d447945050" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_low_range</definition>
        <argsstring>()</argsstring>
        <name>_get_low_range</name>
        <qualifiedname>GoogleSearch::_get_low_range</qualifiedname>
        <briefdescription>
<para>Get the query appended to before the search query. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of query appended to before the search query </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="284" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="366" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a6f38011f5280244821a9c479c3aa68f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_high_range</definition>
        <argsstring>()</argsstring>
        <name>_get_high_range</name>
        <qualifiedname>GoogleSearch::_get_high_range</qualifiedname>
        <briefdescription>
<para>Get the query appended to after the search query. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of query appended to after the search query </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="288" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="370" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a507341e03a95c785ec188ded01a5cbf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_search_type</definition>
        <argsstring>()</argsstring>
        <name>_get_search_type</name>
        <qualifiedname>GoogleSearch::_get_search_type</qualifiedname>
        <briefdescription>
<para>Get the search type of the query. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of search type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="292" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="374" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a85f84b24de2d67ae3f6e47aab6cc4c7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_filetype</definition>
        <argsstring>()</argsstring>
        <name>_get_filetype</name>
        <qualifiedname>GoogleSearch::_get_filetype</qualifiedname>
        <briefdescription>
<para>Get the filetype of the query. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of filetype </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="296" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="378" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1af6b104038d8dc587303611822227aa8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_rights</definition>
        <argsstring>()</argsstring>
        <name>_get_rights</name>
        <qualifiedname>GoogleSearch::_get_rights</qualifiedname>
        <briefdescription>
<para>Get the licensing of the query. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of licensing </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="300" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="382" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a1cd4123b4d8da32d1b1984259c9f798f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_img_size</definition>
        <argsstring>()</argsstring>
        <name>_get_img_size</name>
        <qualifiedname>GoogleSearch::_get_img_size</qualifiedname>
        <briefdescription>
<para>Get the size of the image. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of image size </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="304" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="386" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a7440238a8cb0d066768c91fc01a84e27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_img_type</definition>
        <argsstring>()</argsstring>
        <name>_get_img_type</name>
        <qualifiedname>GoogleSearch::_get_img_type</qualifiedname>
        <briefdescription>
<para>Get the type of the image. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of image type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="308" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="390" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a57439c05a31690613138bbcb9bbe3db0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_img_color_type</definition>
        <argsstring>()</argsstring>
        <name>_get_img_color_type</name>
        <qualifiedname>GoogleSearch::_get_img_color_type</qualifiedname>
        <briefdescription>
<para>Get the color type of the image. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of image color type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="312" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="394" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1aa0a81c11dc13a8f21b0d3ebad29e2856" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_img_dominant_color</definition>
        <argsstring>()</argsstring>
        <name>_get_img_dominant_color</name>
        <qualifiedname>GoogleSearch::_get_img_dominant_color</qualifiedname>
        <briefdescription>
<para>Get the dominant color of the image. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of image dominant color </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="316" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="398" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a8feef20f60682a231eab8171d1cf228e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_language</definition>
        <argsstring>()</argsstring>
        <name>_get_language</name>
        <qualifiedname>GoogleSearch::_get_language</qualifiedname>
        <briefdescription>
<para>Get the language to search google. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of language </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="320" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="402" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a605f48b63fc7eb8d7703756bff4459ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_interface_language</definition>
        <argsstring>()</argsstring>
        <name>_get_interface_language</name>
        <qualifiedname>GoogleSearch::_get_interface_language</qualifiedname>
        <briefdescription>
<para>Get the user interface language. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of user interface language </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="324" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="406" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a776290b0dbe5cf82e45d4238d158876d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_user_country</definition>
        <argsstring>()</argsstring>
        <name>_get_user_country</name>
        <qualifiedname>GoogleSearch::_get_user_country</qualifiedname>
        <briefdescription>
<para>Get the country to search from in google. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of country </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="328" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="410" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1af40f00189f15ab30c68a8771981335d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_result_country</definition>
        <argsstring>()</argsstring>
        <name>_get_result_country</name>
        <qualifiedname>GoogleSearch::_get_result_country</qualifiedname>
        <briefdescription>
<para>Get the country to search for in google. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of country </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="332" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="414" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1acc8b3521f4659e5033311c9258a4b8c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_safe</definition>
        <argsstring>()</argsstring>
        <name>_get_safe</name>
        <qualifiedname>GoogleSearch::_get_safe</qualifiedname>
        <briefdescription>
<para>Get the safe search. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of safe search </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="336" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="418" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a3ed5ec85a99275e03b303230daa48bd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_sort</definition>
        <argsstring>()</argsstring>
        <name>_get_sort</name>
        <qualifiedname>GoogleSearch::_get_sort</qualifiedname>
        <briefdescription>
<para>Get the sort order. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of sort order </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="340" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="422" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a98265fa634b639ed006c4a3e9d32e3d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_json_file</definition>
        <argsstring>()</argsstring>
        <name>_get_json_file</name>
        <qualifiedname>GoogleSearch::_get_json_file</qualifiedname>
        <briefdescription>
<para>Get the name of the json file that stores search result. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of json file name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="344" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="426" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a4acb78cca9641bd46f4d618302dadc72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GoogleSearch::_get_env_file</definition>
        <argsstring>()</argsstring>
        <name>_get_env_file</name>
        <qualifiedname>GoogleSearch::_get_env_file</qualifiedname>
        <briefdescription>
<para>Get the name of the file that contains Google Search API and CX Keys. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String of env file name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="348" column="21" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="430" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a214bad087835cf4658e3e9a964ea9117" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_num_results</definition>
        <argsstring>(const int num_results)</argsstring>
        <name>_set_num_results</name>
        <qualifiedname>GoogleSearch::_set_num_results</qualifiedname>
        <param>
          <type>const int</type>
          <declname>num_results</declname>
        </param>
        <briefdescription>
<para>Set the number of results to be returned by google search. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_results</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer of number of results </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="354" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="434" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1af1ecd4156559a80c88d8564f23e5566c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_start_index</definition>
        <argsstring>(const int start_index)</argsstring>
        <name>_set_start_index</name>
        <qualifiedname>GoogleSearch::_set_start_index</qualifiedname>
        <param>
          <type>const int</type>
          <declname>start_index</declname>
        </param>
        <briefdescription>
<para>Set the index at which search result starts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer of start index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="360" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="440" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a1eb30d4594a88082711fef2044f97a02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_filter</definition>
        <argsstring>(const int filter)</argsstring>
        <name>_set_filter</name>
        <qualifiedname>GoogleSearch::_set_filter</qualifiedname>
        <param>
          <type>const int</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
<para>Set the check whether duplicate is turned On or Off. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer specifying if duplicate content is on or off </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="366" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="446" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a69b95f7f69b3d032ac0b0ea67ec04956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_c2coff</definition>
        <argsstring>(const int c2coff)</argsstring>
        <name>_set_c2coff</name>
        <qualifiedname>GoogleSearch::_set_c2coff</qualifiedname>
        <param>
          <type>const int</type>
          <declname>c2coff</declname>
        </param>
        <briefdescription>
<para>Turn on or off Simplified and Traditional Chinese. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c2coff</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer Specifying to turn on or off Simplified and Traditional Chinese </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="372" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="452" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1abafb411a28070afc4420f112cbef0cd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_date_restrict</definition>
        <argsstring>(const int date_restrict)</argsstring>
        <name>_set_date_restrict</name>
        <qualifiedname>GoogleSearch::_set_date_restrict</qualifiedname>
        <param>
          <type>const int</type>
          <declname>date_restrict</declname>
        </param>
        <briefdescription>
<para>Set whether to restrict search based on date. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>date_restrict</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to restrict search based on date </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="378" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="458" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a521dde45b362c6866657234aea9c7dba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_extra_query</definition>
        <argsstring>(const std::string extra_query)</argsstring>
        <name>_set_extra_query</name>
        <qualifiedname>GoogleSearch::_set_extra_query</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>extra_query</declname>
        </param>
        <briefdescription>
<para>Set extra queries to search for with the search query. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>extra_query</parametername>
</parameternamelist>
<parameterdescription>
<para>String of extra queries to search for with the search query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="384" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="464" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1aee7051cf847b44ccc33d43d53e176b39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_exact_terms</definition>
        <argsstring>(const std::string exact_terms)</argsstring>
        <name>_set_exact_terms</name>
        <qualifiedname>GoogleSearch::_set_exact_terms</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>exact_terms</declname>
        </param>
        <briefdescription>
<para>Set the phrase to include in document in search results. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>exact_terms</parametername>
</parameternamelist>
<parameterdescription>
<para>String of phrase to include in document in search results </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="390" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="470" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a254cbf97b4efc228247be1a043b66aec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_exclude_terms</definition>
        <argsstring>(const std::string exclude_terms)</argsstring>
        <name>_set_exclude_terms</name>
        <qualifiedname>GoogleSearch::_set_exclude_terms</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>exclude_terms</declname>
        </param>
        <briefdescription>
<para>Set the terms to exclude from documents in search result. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>exclude_terms</parametername>
</parameternamelist>
<parameterdescription>
<para>String of terms to exclude from documents in search result </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="396" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="476" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1abe5a6f88cb21975eb542094b55e557ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_site_search</definition>
        <argsstring>(const std::string site_search)</argsstring>
        <name>_set_site_search</name>
        <qualifiedname>GoogleSearch::_set_site_search</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>site_search</declname>
        </param>
        <briefdescription>
<para>Set the site to always include or exclude from search results. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>site_search</parametername>
</parameternamelist>
<parameterdescription>
<para>String of site to always include or exclude from search results </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="402" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="482" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1ad616fd1f77272cd9178740d92425e346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_site_search_filter</definition>
        <argsstring>(const char site_search_filter)</argsstring>
        <name>_set_site_search_filter</name>
        <qualifiedname>GoogleSearch::_set_site_search_filter</qualifiedname>
        <param>
          <type>const char</type>
          <declname>site_search_filter</declname>
        </param>
        <briefdescription>
<para>Set the value to always include or exclude site from search results. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>site_search_filter</parametername>
</parameternamelist>
<parameterdescription>
<para>Char of value specifying to include or exclude a site </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="408" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="488" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a837e67f7f555d109b6126837440e6cec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_link_site</definition>
        <argsstring>(const std::string link_site)</argsstring>
        <name>_set_link_site</name>
        <qualifiedname>GoogleSearch::_set_link_site</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>link_site</declname>
        </param>
        <briefdescription>
<para>Set the link to include in each search result. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>link_site</parametername>
</parameternamelist>
<parameterdescription>
<para>String of link to include in each search result </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="414" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="497" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a9fce583a9ff518516b43e2b69e5e6bf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_or_terms</definition>
        <argsstring>(const std::string or_terms)</argsstring>
        <name>_set_or_terms</name>
        <qualifiedname>GoogleSearch::_set_or_terms</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>or_terms</declname>
        </param>
        <briefdescription>
<para>Set the additional terms to include in the document in search result. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>or_terms</parametername>
</parameternamelist>
<parameterdescription>
<para>String of additional terms to include in documents </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="420" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="503" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1aa7353796681fe553aa2f21e2e636adcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_date_restrict_type</definition>
        <argsstring>(const std::string date_restrict_type)</argsstring>
        <name>_set_date_restrict_type</name>
        <qualifiedname>GoogleSearch::_set_date_restrict_type</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>date_restrict_type</declname>
        </param>
        <briefdescription>
<para>Set the date restrict type to restrict search results. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>date_restrict_type</parametername>
</parameternamelist>
<parameterdescription>
<para>String of date restrict type to restrict search results </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="426" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="509" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a9c0aa803ec6f1f7b3ae8c981e5e27899" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_low_range</definition>
        <argsstring>(const std::string low_range)</argsstring>
        <name>_set_low_range</name>
        <qualifiedname>GoogleSearch::_set_low_range</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>low_range</declname>
        </param>
        <briefdescription>
<para>Set the query appended to before the search query. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>low_range</parametername>
</parameternamelist>
<parameterdescription>
<para>String of query appended to before the search query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="432" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="518" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a06f4f669ab69f7308902f71429c63b47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_high_range</definition>
        <argsstring>(const std::string high_range)</argsstring>
        <name>_set_high_range</name>
        <qualifiedname>GoogleSearch::_set_high_range</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>high_range</declname>
        </param>
        <briefdescription>
<para>Set the query appended to after the search query. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>high_range</parametername>
</parameternamelist>
<parameterdescription>
<para>String of query appended to after the search query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="438" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="524" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a1f33af7be101056a5ff7881478a732b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_search_type</definition>
        <argsstring>(const std::string search_type)</argsstring>
        <name>_set_search_type</name>
        <qualifiedname>GoogleSearch::_set_search_type</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>search_type</declname>
        </param>
        <briefdescription>
<para>Set the search type of the query. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>search_type</parametername>
</parameternamelist>
<parameterdescription>
<para>String of search type of the query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="444" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="530" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a7eeea0f57cb2105b8373d07ca623b20a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_filetype</definition>
        <argsstring>(const std::string filetype)</argsstring>
        <name>_set_filetype</name>
        <qualifiedname>GoogleSearch::_set_filetype</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>filetype</declname>
        </param>
        <briefdescription>
<para>Set the filetype of the query. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filetype</parametername>
</parameternamelist>
<parameterdescription>
<para>String of filetype of the query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="450" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="539" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a25a4a0fb0d49ce5cc87d9f7000302216" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_rights</definition>
        <argsstring>(const std::string right)</argsstring>
        <name>_set_rights</name>
        <qualifiedname>GoogleSearch::_set_rights</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Set the licensing of the query. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rights</parametername>
</parameternamelist>
<parameterdescription>
<para>String of licensing of the query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="456" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="548" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1ae4fc6dc960a3f1404bcde6093ad69ca9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_img_size</definition>
        <argsstring>(const std::string img_size)</argsstring>
        <name>_set_img_size</name>
        <qualifiedname>GoogleSearch::_set_img_size</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>img_size</declname>
        </param>
        <briefdescription>
<para>Set the size of the image. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>img_size</parametername>
</parameternamelist>
<parameterdescription>
<para>String of size of the image </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="462" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="557" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a4920777d6c82b9285222c4728293e92e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_img_type</definition>
        <argsstring>(const std::string img_type)</argsstring>
        <name>_set_img_type</name>
        <qualifiedname>GoogleSearch::_set_img_type</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>img_type</declname>
        </param>
        <briefdescription>
<para>Set the type of the image. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>img_type</parametername>
</parameternamelist>
<parameterdescription>
<para>String of type of the image </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="468" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="566" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a3c2211979004ddb416dfede9d780a51a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_img_color_type</definition>
        <argsstring>(const std::string img_color_type)</argsstring>
        <name>_set_img_color_type</name>
        <qualifiedname>GoogleSearch::_set_img_color_type</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>img_color_type</declname>
        </param>
        <briefdescription>
<para>Set the color type of the image. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>img_color_type</parametername>
</parameternamelist>
<parameterdescription>
<para>String of color type of the image </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="474" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="575" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a3e4b603aa97b06a9fe8f7c66849d0d89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_img_dominant_color</definition>
        <argsstring>(const std::string img_dominant_color)</argsstring>
        <name>_set_img_dominant_color</name>
        <qualifiedname>GoogleSearch::_set_img_dominant_color</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>img_dominant_color</declname>
        </param>
        <briefdescription>
<para>Set the dominant color of the image. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>img_dominant_color</parametername>
</parameternamelist>
<parameterdescription>
<para>String of dominant color of the image </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="480" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="584" bodyend="591"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a1d4e6342df10d20d6c1408fe860607eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_language</definition>
        <argsstring>(const std::string language)</argsstring>
        <name>_set_language</name>
        <qualifiedname>GoogleSearch::_set_language</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>language</declname>
        </param>
        <briefdescription>
<para>Set the language to search google. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>language</parametername>
</parameternamelist>
<parameterdescription>
<para>String of language to search google </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="486" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="593" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1aa389d41c9c5b63c69fbc00b643742dcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_interface_language</definition>
        <argsstring>(const std::string interface_language)</argsstring>
        <name>_set_interface_language</name>
        <qualifiedname>GoogleSearch::_set_interface_language</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>interface_language</declname>
        </param>
        <briefdescription>
<para>Set the user interface language. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interface_language</parametername>
</parameternamelist>
<parameterdescription>
<para>String of user interface language </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="492" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="599" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a1b0b666a1e1d654a755b22bb43e28436" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_user_country</definition>
        <argsstring>(const std::string user_country)</argsstring>
        <name>_set_user_country</name>
        <qualifiedname>GoogleSearch::_set_user_country</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>user_country</declname>
        </param>
        <briefdescription>
<para>Set the country to search from in google. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user_country</parametername>
</parameternamelist>
<parameterdescription>
<para>String of country to search from in google </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="498" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="605" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1add74e282720c24a93e81c148fc149ed4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_result_country</definition>
        <argsstring>(const std::string result_country)</argsstring>
        <name>_set_result_country</name>
        <qualifiedname>GoogleSearch::_set_result_country</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>result_country</declname>
        </param>
        <briefdescription>
<para>Set the country to search for in google. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result_country</parametername>
</parameternamelist>
<parameterdescription>
<para>String of country to search for in google </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="504" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="611" bodyend="615"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a13e1aabcea8cff3b18491285a4e2f707" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_safe</definition>
        <argsstring>(const std::string safe)</argsstring>
        <name>_set_safe</name>
        <qualifiedname>GoogleSearch::_set_safe</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>safe</declname>
        </param>
        <briefdescription>
<para>Set the safe search. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>safe</parametername>
</parameternamelist>
<parameterdescription>
<para>String of safe search </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="510" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="617" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a83e4bf2f957993c51747133553e50216" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_sort</definition>
        <argsstring>(const std::string sort)</argsstring>
        <name>_set_sort</name>
        <qualifiedname>GoogleSearch::_set_sort</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>sort</declname>
        </param>
        <briefdescription>
<para>Set the sort order. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sort</parametername>
</parameternamelist>
<parameterdescription>
<para>String of sort order </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="516" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="626" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1af96ba9bdacabf45439072462fd078af6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_response_file</definition>
        <argsstring>(const std::string json_file)</argsstring>
        <name>_set_response_file</name>
        <qualifiedname>GoogleSearch::_set_response_file</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>json_file</declname>
        </param>
        <briefdescription>
<para>Set the json file to save search result. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>json_file</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file to save response data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="522" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="635" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1afb9c35b435d93c67accf88e1a35d2ff9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_set_env_file</definition>
        <argsstring>(const std::string env_file)</argsstring>
        <name>_set_env_file</name>
        <qualifiedname>GoogleSearch::_set_env_file</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>env_file</declname>
        </param>
        <briefdescription>
<para>Set the name of env file that contains secret keys. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>env_file</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file that contains Google Search API and CX Keys </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="528" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="641" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1ab5ae352adcac024f9dca895457f55744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_search_google</definition>
        <argsstring>(const std::string query, const std::string json_file)</argsstring>
        <name>_search_google</name>
        <qualifiedname>GoogleSearch::_search_google</qualifiedname>
        <param>
          <type>const std::string</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>json_file</declname>
        </param>
        <briefdescription>
<para>Search the google based on given query. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>Query to search on google </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>json_file</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file to save response data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="535" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="647" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="dc/d02/classGoogleSearch_1a1f1087c7891db8d3174e05c0a56b8e16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GoogleSearch::_get_result</definition>
        <argsstring>(const int result_index, const bool title, const bool snippet, const bool link, const bool image, const std::string filename)</argsstring>
        <name>_get_result</name>
        <qualifiedname>GoogleSearch::_get_result</qualifiedname>
        <param>
          <type>const int</type>
          <declname>result_index</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>snippet</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>link</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Parse Json file and retrive relevant information. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of individual result to parse </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Get Title </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>snippet</parametername>
</parameternamelist>
<parameterdescription>
<para>Get Snippet </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>link</parametername>
</parameternamelist>
<parameterdescription>
<para>Get Link </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>Get Image </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file to retrive response data from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cpp_files/header_files/search_configure.h" line="547" column="14" bodyfile="cpp_files/program_files/search_configure.cpp" bodystart="658" bodyend="701"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="cpp_files/header_files/search_configure.h" line="13" column="1" bodyfile="cpp_files/header_files/search_configure.h" bodystart="13" bodyend="557"/>
    <listofallmembers>
      <member refid="dc/d02/classGoogleSearch_1a98daa8954a1ecddb897270c218eb419d" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__api_key</name></member>
      <member refid="dc/d02/classGoogleSearch_1a88dda82c4b7ed9cc5701fc8def0811dd" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__available_filetypes</name></member>
      <member refid="dc/d02/classGoogleSearch_1a81153d09959bea871f4b072db3988bf8" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__available_interface_languages</name></member>
      <member refid="dc/d02/classGoogleSearch_1a30ee6718066d5250971331ea321c5a5c" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__available_languages</name></member>
      <member refid="dc/d02/classGoogleSearch_1a56be3faaa36d19d1dc10685d020c4a60" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__available_result_countries</name></member>
      <member refid="dc/d02/classGoogleSearch_1a4d579bbfd5dfc35bedeb02bf42c94126" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__available_user_countries</name></member>
      <member refid="dc/d02/classGoogleSearch_1ac289c9930bbfa44c7ee9598f6c9d0d13" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__c2coff</name></member>
      <member refid="dc/d02/classGoogleSearch_1ade4849cbe15f3dbbc881607709e80150" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__construct_search_url</name></member>
      <member refid="dc/d02/classGoogleSearch_1ac07d3f626bffad9023dfdb8b0ef1a63d" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__cx_key</name></member>
      <member refid="dc/d02/classGoogleSearch_1a63ba3e6af3d245d58396abbfcac13f38" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__date_restrict</name></member>
      <member refid="dc/d02/classGoogleSearch_1a4f27a16fb259a1a7a584f564767ebcf3" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__encode_url</name></member>
      <member refid="dc/d02/classGoogleSearch_1a07583be7ce040aceadd290bf32a0e69b" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__fetch_json_data</name></member>
      <member refid="dc/d02/classGoogleSearch_1a1300cfe007aaece3f1ea44df1f01045a" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__filter</name></member>
      <member refid="dc/d02/classGoogleSearch_1af29d60b9f77127f516c55f5f6d8f22a0" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__get_api_cx</name></member>
      <member refid="dc/d02/classGoogleSearch_1a94c1203a6d4daeee9f9f3eecc074b0f2" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__get_env_value</name></member>
      <member refid="dc/d02/classGoogleSearch_1a330870fba4271affe59a6f63c15b4094" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__image_color_types</name></member>
      <member refid="dc/d02/classGoogleSearch_1a0ba6fab02f3cb30ee96b2f121f9fd563" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__image_dominant_color_types</name></member>
      <member refid="dc/d02/classGoogleSearch_1aeb6f3294471d0c8034fda318a70f4405" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__image_sizes</name></member>
      <member refid="dc/d02/classGoogleSearch_1a739ec47bdcbd3a589dee821b3d902536" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__image_types</name></member>
      <member refid="dc/d02/classGoogleSearch_1a2c4085d7f060ae3f2225e31a3baa8301" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__load_env_file</name></member>
      <member refid="dc/d02/classGoogleSearch_1a408d1bf4c74308b949d2040b1967be63" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__rights</name></member>
      <member refid="dc/d02/classGoogleSearch_1aac304bc26d9ec2837183d10127329c3a" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__safe</name></member>
      <member refid="dc/d02/classGoogleSearch_1a496dc9981d2674726e1dd5db034d0c82" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__save_json_data</name></member>
      <member refid="dc/d02/classGoogleSearch_1ad6335ffcd6d5e85c2be4fd83057ba46e" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__search_type</name></member>
      <member refid="dc/d02/classGoogleSearch_1a34feda39439a501d00463e200d755dba" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__site_search_filter</name></member>
      <member refid="dc/d02/classGoogleSearch_1a1a85dc0736f2c004abff5ad909c819f7" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__sort</name></member>
      <member refid="dc/d02/classGoogleSearch_1ad531115114c75878c21f6a9f19c2ff95" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__trim</name></member>
      <member refid="dc/d02/classGoogleSearch_1aaad2a00b332c52a78026bda29e4cd761" prot="private" virt="non-virtual"><scope>GoogleSearch</scope><name>__WriteCallBack</name></member>
      <member refid="dc/d02/classGoogleSearch_1a963b6fb88739d6c53a68cf83743b5b2c" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_c2coff</name></member>
      <member refid="dc/d02/classGoogleSearch_1a426792c425f540a4a47f858e17dbe814" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_date_restrict</name></member>
      <member refid="dc/d02/classGoogleSearch_1a4d3aefbc47afb2d6810cca05b5218490" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_date_restrict_type</name></member>
      <member refid="dc/d02/classGoogleSearch_1a8508e9f23702bd9eede5c3b06f10dd2d" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_env_file</name></member>
      <member refid="dc/d02/classGoogleSearch_1a415b481dff493617dc74f3cebc158c41" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_exact_terms</name></member>
      <member refid="dc/d02/classGoogleSearch_1a53cc91aca1c6d22892b1f523d1f496dd" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_exclude_terms</name></member>
      <member refid="dc/d02/classGoogleSearch_1a97d8105bc53ca85200ecbfa5368ec1be" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_extra_query</name></member>
      <member refid="dc/d02/classGoogleSearch_1a01ad09d2343c7c463a7bd9eabc8193a7" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_filetype</name></member>
      <member refid="dc/d02/classGoogleSearch_1a3b92453b743b42ca564f9c7f63bbfbdf" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_filter</name></member>
      <member refid="dc/d02/classGoogleSearch_1aa36b00cb21a4f935ae151076e54784b4" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_c2coff</name></member>
      <member refid="dc/d02/classGoogleSearch_1a47fd4dd646a5daf161a13bccf404c879" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_date_restrict</name></member>
      <member refid="dc/d02/classGoogleSearch_1aff0ebb4654b5ab08b2e6f5ed0899c5ad" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_date_restrict_type</name></member>
      <member refid="dc/d02/classGoogleSearch_1a4acb78cca9641bd46f4d618302dadc72" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_env_file</name></member>
      <member refid="dc/d02/classGoogleSearch_1ae6e1f94e2473b59caa8ab8561244ff90" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_exact_terms</name></member>
      <member refid="dc/d02/classGoogleSearch_1ad5de2384cab99a3cc06fb5730401f2e5" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_exclude_terms</name></member>
      <member refid="dc/d02/classGoogleSearch_1ae0a87c1fb00162479d838a7b8f3df2d3" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_extra_query</name></member>
      <member refid="dc/d02/classGoogleSearch_1a85f84b24de2d67ae3f6e47aab6cc4c7d" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_filetype</name></member>
      <member refid="dc/d02/classGoogleSearch_1a8a8164e7364d2a757f9a957e940e2e42" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_filter</name></member>
      <member refid="dc/d02/classGoogleSearch_1a6f38011f5280244821a9c479c3aa68f6" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_high_range</name></member>
      <member refid="dc/d02/classGoogleSearch_1a57439c05a31690613138bbcb9bbe3db0" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_img_color_type</name></member>
      <member refid="dc/d02/classGoogleSearch_1aa0a81c11dc13a8f21b0d3ebad29e2856" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_img_dominant_color</name></member>
      <member refid="dc/d02/classGoogleSearch_1a1cd4123b4d8da32d1b1984259c9f798f" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_img_size</name></member>
      <member refid="dc/d02/classGoogleSearch_1a7440238a8cb0d066768c91fc01a84e27" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_img_type</name></member>
      <member refid="dc/d02/classGoogleSearch_1a605f48b63fc7eb8d7703756bff4459ef" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_interface_language</name></member>
      <member refid="dc/d02/classGoogleSearch_1a98265fa634b639ed006c4a3e9d32e3d1" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_json_file</name></member>
      <member refid="dc/d02/classGoogleSearch_1a8feef20f60682a231eab8171d1cf228e" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_language</name></member>
      <member refid="dc/d02/classGoogleSearch_1ab6674c07887ad11a3513ec263d32dd87" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_link_site</name></member>
      <member refid="dc/d02/classGoogleSearch_1ac61ebee0ad419ba4086037d447945050" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_low_range</name></member>
      <member refid="dc/d02/classGoogleSearch_1a03a138b96411ba8903ff84cb62970aa8" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_num_results</name></member>
      <member refid="dc/d02/classGoogleSearch_1a1085e8f32f2acff42e1410b9a0883d69" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_or_terms</name></member>
      <member refid="dc/d02/classGoogleSearch_1afbaac5ab5848658477eb17fe423f57db" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_query</name></member>
      <member refid="dc/d02/classGoogleSearch_1a1f1087c7891db8d3174e05c0a56b8e16" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_result</name></member>
      <member refid="dc/d02/classGoogleSearch_1af40f00189f15ab30c68a8771981335d0" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_result_country</name></member>
      <member refid="dc/d02/classGoogleSearch_1af6b104038d8dc587303611822227aa8a" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_rights</name></member>
      <member refid="dc/d02/classGoogleSearch_1acc8b3521f4659e5033311c9258a4b8c5" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_safe</name></member>
      <member refid="dc/d02/classGoogleSearch_1a507341e03a95c785ec188ded01a5cbf3" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_search_type</name></member>
      <member refid="dc/d02/classGoogleSearch_1af0ad107510fb8d95b383a9a357882120" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_search_url</name></member>
      <member refid="dc/d02/classGoogleSearch_1aebc113b74fd4ea720342c06bdfd71666" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_site_search</name></member>
      <member refid="dc/d02/classGoogleSearch_1ae03ab0b8f25f56e330fc203d6bb97e0f" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_site_search_filter</name></member>
      <member refid="dc/d02/classGoogleSearch_1a3ed5ec85a99275e03b303230daa48bd8" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_sort</name></member>
      <member refid="dc/d02/classGoogleSearch_1a9b13414d1131401e103deebc2440d494" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_start_index</name></member>
      <member refid="dc/d02/classGoogleSearch_1a776290b0dbe5cf82e45d4238d158876d" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_get_user_country</name></member>
      <member refid="dc/d02/classGoogleSearch_1ad7cf2752704c74fc776cd01c1e93d458" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_high_range</name></member>
      <member refid="dc/d02/classGoogleSearch_1afcf1e9c1fde84fb98f2dd8c97664fab7" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_img_color_type</name></member>
      <member refid="dc/d02/classGoogleSearch_1af027f8cc01832e01b58efac8adcfb35c" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_img_dominant_color</name></member>
      <member refid="dc/d02/classGoogleSearch_1ae3f6fad4b77eafc33bb823c5c1645725" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_img_size</name></member>
      <member refid="dc/d02/classGoogleSearch_1ad43951cacc95e359c8de5d93f85383e2" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_img_type</name></member>
      <member refid="dc/d02/classGoogleSearch_1a897edbac97e63e3ee0f7017ee8b2b20e" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_interface_language</name></member>
      <member refid="dc/d02/classGoogleSearch_1a6a4e64d55fc8a16befdc922c9d3a8f00" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_json_file</name></member>
      <member refid="dc/d02/classGoogleSearch_1aff508ea13cba6fac1bda7f0bb5306acd" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_language</name></member>
      <member refid="dc/d02/classGoogleSearch_1a681fb4078142782b6b831374cc53e563" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_link_site</name></member>
      <member refid="dc/d02/classGoogleSearch_1ad7c730a789c68cf2d43ef2940a9e2782" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_low_range</name></member>
      <member refid="dc/d02/classGoogleSearch_1add8f08252792bf5935cb4cdd7e4a9e52" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_num_results</name></member>
      <member refid="dc/d02/classGoogleSearch_1a70ce6f6e447c502f318af4758203c212" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_or_terms</name></member>
      <member refid="dc/d02/classGoogleSearch_1a9b2164a468f084a8c40bf03ecdf97e35" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_result_country</name></member>
      <member refid="dc/d02/classGoogleSearch_1aac430e898129eb52123d395dabf61cf5" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_rights</name></member>
      <member refid="dc/d02/classGoogleSearch_1af076bbdeaa3a1a565b2da1824b2f6d11" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_safe</name></member>
      <member refid="dc/d02/classGoogleSearch_1ab5ae352adcac024f9dca895457f55744" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_search_google</name></member>
      <member refid="dc/d02/classGoogleSearch_1a329ad4da7654f1c6d4f0910e43c956bb" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_search_terms</name></member>
      <member refid="dc/d02/classGoogleSearch_1a0725fca91cd4d4e3d6c64230217e1ca1" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_search_type</name></member>
      <member refid="dc/d02/classGoogleSearch_1aa1203db345c6dcf80029fa7dbcd7300f" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_search_url</name></member>
      <member refid="dc/d02/classGoogleSearch_1a69b95f7f69b3d032ac0b0ea67ec04956" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_c2coff</name></member>
      <member refid="dc/d02/classGoogleSearch_1abafb411a28070afc4420f112cbef0cd0" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_date_restrict</name></member>
      <member refid="dc/d02/classGoogleSearch_1aa7353796681fe553aa2f21e2e636adcf" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_date_restrict_type</name></member>
      <member refid="dc/d02/classGoogleSearch_1afb9c35b435d93c67accf88e1a35d2ff9" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_env_file</name></member>
      <member refid="dc/d02/classGoogleSearch_1aee7051cf847b44ccc33d43d53e176b39" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_exact_terms</name></member>
      <member refid="dc/d02/classGoogleSearch_1a254cbf97b4efc228247be1a043b66aec" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_exclude_terms</name></member>
      <member refid="dc/d02/classGoogleSearch_1a521dde45b362c6866657234aea9c7dba" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_extra_query</name></member>
      <member refid="dc/d02/classGoogleSearch_1a7eeea0f57cb2105b8373d07ca623b20a" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_filetype</name></member>
      <member refid="dc/d02/classGoogleSearch_1a1eb30d4594a88082711fef2044f97a02" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_filter</name></member>
      <member refid="dc/d02/classGoogleSearch_1a06f4f669ab69f7308902f71429c63b47" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_high_range</name></member>
      <member refid="dc/d02/classGoogleSearch_1a3c2211979004ddb416dfede9d780a51a" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_img_color_type</name></member>
      <member refid="dc/d02/classGoogleSearch_1a3e4b603aa97b06a9fe8f7c66849d0d89" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_img_dominant_color</name></member>
      <member refid="dc/d02/classGoogleSearch_1ae4fc6dc960a3f1404bcde6093ad69ca9" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_img_size</name></member>
      <member refid="dc/d02/classGoogleSearch_1a4920777d6c82b9285222c4728293e92e" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_img_type</name></member>
      <member refid="dc/d02/classGoogleSearch_1aa389d41c9c5b63c69fbc00b643742dcc" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_interface_language</name></member>
      <member refid="dc/d02/classGoogleSearch_1a1d4e6342df10d20d6c1408fe860607eb" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_language</name></member>
      <member refid="dc/d02/classGoogleSearch_1a837e67f7f555d109b6126837440e6cec" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_link_site</name></member>
      <member refid="dc/d02/classGoogleSearch_1a9c0aa803ec6f1f7b3ae8c981e5e27899" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_low_range</name></member>
      <member refid="dc/d02/classGoogleSearch_1a214bad087835cf4658e3e9a964ea9117" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_num_results</name></member>
      <member refid="dc/d02/classGoogleSearch_1a9fce583a9ff518516b43e2b69e5e6bf4" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_or_terms</name></member>
      <member refid="dc/d02/classGoogleSearch_1af96ba9bdacabf45439072462fd078af6" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_response_file</name></member>
      <member refid="dc/d02/classGoogleSearch_1add74e282720c24a93e81c148fc149ed4" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_result_country</name></member>
      <member refid="dc/d02/classGoogleSearch_1a25a4a0fb0d49ce5cc87d9f7000302216" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_rights</name></member>
      <member refid="dc/d02/classGoogleSearch_1a13e1aabcea8cff3b18491285a4e2f707" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_safe</name></member>
      <member refid="dc/d02/classGoogleSearch_1a1f33af7be101056a5ff7881478a732b6" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_search_type</name></member>
      <member refid="dc/d02/classGoogleSearch_1abe5a6f88cb21975eb542094b55e557ae" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_site_search</name></member>
      <member refid="dc/d02/classGoogleSearch_1ad616fd1f77272cd9178740d92425e346" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_site_search_filter</name></member>
      <member refid="dc/d02/classGoogleSearch_1a83e4bf2f957993c51747133553e50216" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_sort</name></member>
      <member refid="dc/d02/classGoogleSearch_1af1ecd4156559a80c88d8564f23e5566c" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_start_index</name></member>
      <member refid="dc/d02/classGoogleSearch_1a1b0b666a1e1d654a755b22bb43e28436" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_set_user_country</name></member>
      <member refid="dc/d02/classGoogleSearch_1a98f861535626ae36fddf48d0edafec38" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_site_search</name></member>
      <member refid="dc/d02/classGoogleSearch_1aa7d8f14d9f457b2f867227b64c455156" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_site_search_filter</name></member>
      <member refid="dc/d02/classGoogleSearch_1a021c89de5adc99b9780a526f64e12934" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_sort</name></member>
      <member refid="dc/d02/classGoogleSearch_1aade376956739e38697db945217c6e26e" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_start_index</name></member>
      <member refid="dc/d02/classGoogleSearch_1a33f5a0e1a9eb6c0b6254b2bd77dffba8" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>_user_country</name></member>
      <member refid="dc/d02/classGoogleSearch_1a8ca6a396f3c4520c20a9c9083c4e7f2c" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>GoogleSearch</name></member>
      <member refid="dc/d02/classGoogleSearch_1ac6ef9203faf042ea043df3208ae472ef" prot="public" virt="non-virtual"><scope>GoogleSearch</scope><name>~GoogleSearch</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
