<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="d3/dc1/news__configure_8cpp" kind="file" language="C++">
    <compoundname>news_configure.cpp</compoundname>
    <includes refid="d2/dfa/news__configure_8h" local="yes">../header_files/news_configure.h</includes>
    <incdepgraph>
      <node id="2">
        <label>../header_files/news_configure.h</label>
        <link refid="d2/dfa/news__configure_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>news_configure.cpp</label>
        <link refid="d3/dc1/news__configure_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ctime</label>
      </node>
      <node id="11">
        <label>curl/curl.h</label>
      </node>
      <node id="9">
        <label>fstream</label>
      </node>
      <node id="10">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>map</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="12">
        <label>tinyxml2.h</label>
      </node>
      <node id="7">
        <label>unordered_map</label>
      </node>
      <node id="8">
        <label>unordered_set</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;../header_files/news_configure.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><ref refid="dc/d59/classGoogleNews_1a2af3abe86210ffdd3ba34591be2ab7d0" kindref="member">GoogleNews::GoogleNews</ref>(</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>language<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;en&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>Languge<sp/>you<sp/>want<sp/>to<sp/>get<sp/>the<sp/>news<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>country<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;US&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>Country<sp/>you<sp/>want<sp/>to<sp/>get<sp/>the<sp/>news<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>period<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;anytime&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>Time<sp/>period<sp/>to<sp/>get<sp/>news<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>start_date<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>Starting<sp/>date<sp/>for<sp/>when<sp/>to<sp/>get<sp/>news<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>end_date<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>Ending<sp/>date<sp/>for<sp/>when<sp/>to<sp/>get<sp/>the<sp/>news<sp/>till.<sp/>End<sp/>date<sp/>should<sp/>be<sp/>atleast<sp/>1<sp/>day<sp/>after<sp/>start<sp/>date</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_results<sp/>=<sp/>10,<sp/></highlight><highlight class="comment">//<sp/>Max<sp/>number<sp/>of<sp/>results<sp/>to<sp/>be<sp/>returned<sp/>for<sp/>the<sp/>news</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>exclude_websites<sp/>=<sp/>{}<sp/></highlight><highlight class="comment">//<sp/>Websites<sp/>to<sp/>exclude<sp/>when<sp/>searching<sp/>for<sp/>the<sp/>news</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">){</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_language<sp/>=<sp/>language;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_country<sp/>=<sp/>country;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_period<sp/>=<sp/>period;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_start_date<sp/>=<sp/>start_date;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_end_date<sp/>=<sp/>end_date;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_max_results<sp/>=<sp/>max_results;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_exclude_websites<sp/>=<sp/>exclude_websites;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="dc/d59/classGoogleNews_1a7d3967f251d27ce1f862288757c976e0" kindref="member">GoogleNews::~GoogleNews</ref>(){</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1aa3304912ba70f5939785b3f92d354240" kindref="member">_language</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1acd148c22d137fb6d4740b52d0217ab65" kindref="member">_country</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1aec3c5d1c4039b4a16a68974eaaea1f9b" kindref="member">_period</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1a025ae1d5aed680321026405aa8b13355" kindref="member">_start_date</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1a4b8c0b77d0aa179eb83e9d8c89842724" kindref="member">_end_date</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1ab6124f84e31a150bb8a610290606338e" kindref="member">_max_results</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1a3c7a018ed33131d0e15d6ae103b48302" kindref="member">_exclude_websites</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>GoogleNews::__WriteCallback(</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>contents,<sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>to<sp/>buffer<sp/>containing<sp/>the<sp/>downloaded<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>the<sp/>downloaded<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nmemb,<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>elements<sp/>in<sp/>the<sp/>downloaded<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>userp<sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>to<sp/>the<sp/>user-defined<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>((std::string*)userp)-&gt;append((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)contents,<sp/>size<sp/>*<sp/>nmemb);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size<sp/>*<sp/>nmemb;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GoogleNews::__contains(</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>vec,<sp/></highlight><highlight class="comment">//<sp/>Vector<sp/>to<sp/>search<sp/>for<sp/>the<sp/>given<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>value<sp/></highlight><highlight class="comment">//<sp/>Value<sp/>to<sp/>search<sp/>for<sp/>in<sp/>the<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_set&lt;std::string&gt;<sp/>set(vec.begin(),<sp/>vec.end());<sp/></highlight><highlight class="comment">//<sp/>Unordered<sp/>set<sp/>to<sp/>remove<sp/>duplicates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set.find(value)<sp/>!=<sp/>set.end();</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GoogleNews::__is_date_different(</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_year,<sp/></highlight><highlight class="comment">//<sp/>Start<sp/>year<sp/>for<sp/>news<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_month,<sp/></highlight><highlight class="comment">//<sp/>Start<sp/>month<sp/>for<sp/>news<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_day,<sp/></highlight><highlight class="comment">//<sp/>Start<sp/>day<sp/>for<sp/>news<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_year,<sp/></highlight><highlight class="comment">//<sp/>End<sp/>year<sp/>for<sp/>news<sp/>search<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_month,<sp/></highlight><highlight class="comment">//<sp/>End<sp/>month<sp/>for<sp/>news<sp/>search<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_day<sp/></highlight><highlight class="comment">//<sp/>End<sp/>day<sp/>for<sp/>news<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tm<sp/>start_date<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>start_day,<sp/>start_month<sp/>-<sp/>1,<sp/>start_year<sp/>-<sp/>1900};<sp/></highlight><highlight class="comment">//<sp/>Start<sp/>date<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tm<sp/>end_date<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>end_day,<sp/>end_month<sp/>-<sp/>1,<sp/>end_year<sp/>-<sp/>1900};<sp/></highlight><highlight class="comment">//<sp/>End<sp/>date<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>std::time_t<sp/>start_time<sp/>=<sp/>std::mktime(&amp;start_date);<sp/></highlight><highlight class="comment">//<sp/>Start<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>std::time_t<sp/>end_time<sp/>=<sp/>std::mktime(&amp;end_date);<sp/></highlight><highlight class="comment">//<sp/>End<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>difftime(end_time,<sp/>start_time)<sp/>&gt;=<sp/>86400;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">std::string<sp/>GoogleNews::__url_parameters(){</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>time_query<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Stores<sp/>period<sp/>if<sp/>start<sp/>date<sp/>and<sp/>end<sp/>date<sp/>are<sp/>not<sp/>given,<sp/>else<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="dc/d59/classGoogleNews_1a025ae1d5aed680321026405aa8b13355" kindref="member">_start_date</ref><sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>||<sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1a4b8c0b77d0aa179eb83e9d8c89842724" kindref="member">_end_date</ref><sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="dc/d59/classGoogleNews_1a025ae1d5aed680321026405aa8b13355" kindref="member">_start_date</ref><sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_query<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;%20after%3A&quot;</highlight><highlight class="normal"><sp/>+<sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1a025ae1d5aed680321026405aa8b13355" kindref="member">_start_date</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="dc/d59/classGoogleNews_1a4b8c0b77d0aa179eb83e9d8c89842724" kindref="member">_end_date</ref><sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_query<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;%20before%3A&quot;</highlight><highlight class="normal"><sp/>+<sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1a4b8c0b77d0aa179eb83e9d8c89842724" kindref="member">_end_date</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="dc/d59/classGoogleNews_1aec3c5d1c4039b4a16a68974eaaea1f9b" kindref="member">_period</ref><sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;anytime&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_query<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;%20when%3A&quot;</highlight><highlight class="normal"><sp/>+<sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1aec3c5d1c4039b4a16a68974eaaea1f9b" kindref="member">_period</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>language<sp/>=<sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1aa3304912ba70f5939785b3f92d354240" kindref="member">_language</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;en&quot;</highlight><highlight class="normal"><sp/>?<sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1aa3304912ba70f5939785b3f92d354240" kindref="member">_language</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-US&quot;</highlight><highlight class="normal">:<sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1aa3304912ba70f5939785b3f92d354240" kindref="member">_language</ref>;<sp/></highlight><highlight class="comment">//<sp/>Languages<sp/>to<sp/>used<sp/>for<sp/>news<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>time_query<sp/>+<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&amp;hl=&quot;</highlight><highlight class="normal"><sp/>+<sp/>language<sp/>+<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&amp;gl=&quot;</highlight><highlight class="normal"><sp/>+<sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1acd148c22d137fb6d4740b52d0217ab65" kindref="member">_country</ref><sp/>+</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&amp;ceid=&quot;</highlight><highlight class="normal"><sp/>+<sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1acd148c22d137fb6d4740b52d0217ab65" kindref="member">_country</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1aa3304912ba70f5939785b3f92d354240" kindref="member">_language</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">std::string<sp/>GoogleNews::__full_url(</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>keyword<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Keyword<sp/>used<sp/>for<sp/>searching<sp/>the<sp/>news</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">){</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>parameters<sp/>=<sp/>this-&gt;__url_parameters();<sp/></highlight><highlight class="comment">//<sp/>Constructed<sp/>parameters<sp/>for<sp/>news<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;__news_url<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/search?q=&quot;</highlight><highlight class="normal"><sp/>+<sp/>keyword<sp/>+<sp/>parameters;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">std::string<sp/>GoogleNews::__get_rss_content(</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>url<sp/></highlight><highlight class="comment">//<sp/>URL<sp/>for<sp/>news<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>CURL*<sp/>curl;<sp/></highlight><highlight class="comment">//<sp/>Curl<sp/>object<sp/>to<sp/>get<sp/>the<sp/>result<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>readBuffer;<sp/></highlight><highlight class="comment">//<sp/>Buffer<sp/>to<sp/>store<sp/>the<sp/>result<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>curl_global_init(CURL_GLOBAL_DEFAULT);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>curl<sp/>=<sp/>curl_easy_init();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(curl)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curl_easy_setopt(curl,<sp/>CURLOPT_URL,<sp/>url.c_str());</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curl_easy_setopt(curl,<sp/>CURLOPT_WRITEFUNCTION,<sp/>__WriteCallback);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curl_easy_setopt(curl,<sp/>CURLOPT_WRITEDATA,<sp/>&amp;readBuffer);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curl_easy_perform(curl);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curl_easy_cleanup(curl);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>curl_global_cleanup();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>readBuffer;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">std::vector&lt;std::unordered_map&lt;std::string,<sp/>std::string&gt;&gt;<sp/>GoogleNews::__parse_rss_content(</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>xmlContent<sp/></highlight><highlight class="comment">//<sp/>XML<sp/>content<sp/>to<sp/>be<sp/>parsed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">tinyxml2;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Starting<sp/>index<sp/>to<sp/>start<sp/>XML<sp/>parsing<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>XMLDocument<sp/>doc;<sp/></highlight><highlight class="comment">//<sp/>XML<sp/>document<sp/>to<sp/>parse<sp/>XML<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>doc.Parse(xmlContent.c_str());</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::unordered_map&lt;std::string,<sp/>std::string&gt;&gt;<sp/>items;<sp/></highlight><highlight class="comment">//<sp/>All<sp/>items<sp/>in<sp/>the<sp/>XML<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>XMLElement*<sp/>channel<sp/>=<sp/>doc.FirstChildElement(</highlight><highlight class="stringliteral">&quot;rss&quot;</highlight><highlight class="normal">)-&gt;FirstChildElement(</highlight><highlight class="stringliteral">&quot;channel&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Channel<sp/>element<sp/>in<sp/>the<sp/>xml<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(XMLElement*<sp/>item<sp/>=<sp/>channel-&gt;FirstChildElement(</highlight><highlight class="stringliteral">&quot;item&quot;</highlight><highlight class="normal">);<sp/>item<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>item<sp/>=<sp/>item-&gt;NextSiblingElement(</highlight><highlight class="stringliteral">&quot;item&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>&gt;<sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1ab6124f84e31a150bb8a610290606338e" kindref="member">_max_results</ref>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>std::string&gt;<sp/>itemMap;<sp/></highlight><highlight class="comment">//<sp/>Unordered<sp/>map<sp/>of<sp/>items<sp/>of<sp/>XML<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XMLElement*<sp/>titleElem<sp/>=<sp/>item-&gt;FirstChildElement(</highlight><highlight class="stringliteral">&quot;title&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Title<sp/>element<sp/>in<sp/>the<sp/>XML<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(titleElem)<sp/>itemMap[</highlight><highlight class="stringliteral">&quot;title&quot;</highlight><highlight class="normal">]<sp/>=<sp/>titleElem-&gt;GetText();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XMLElement*<sp/>linkElem<sp/>=<sp/>item-&gt;FirstChildElement(</highlight><highlight class="stringliteral">&quot;link&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Link<sp/>element<sp/>in<sp/>the<sp/>XML<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(linkElem)<sp/>itemMap[</highlight><highlight class="stringliteral">&quot;link&quot;</highlight><highlight class="normal">]<sp/>=<sp/>linkElem-&gt;GetText();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XMLElement*<sp/>pubDateElem<sp/>=<sp/>item-&gt;FirstChildElement(</highlight><highlight class="stringliteral">&quot;pubDate&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>PubDate<sp/>element<sp/>in<sp/>the<sp/>XML<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pubDateElem)<sp/>itemMap[</highlight><highlight class="stringliteral">&quot;pubDate&quot;</highlight><highlight class="normal">]<sp/>=<sp/>pubDateElem-&gt;GetText();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XMLElement*<sp/>descriptionElem<sp/>=<sp/>item-&gt;FirstChildElement(</highlight><highlight class="stringliteral">&quot;description&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Description<sp/>element<sp/>in<sp/>the<sp/>XML<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(descriptionElem)<sp/>itemMap[</highlight><highlight class="stringliteral">&quot;description&quot;</highlight><highlight class="normal">]<sp/>=<sp/>descriptionElem-&gt;GetText();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XMLElement*<sp/>sourceElem<sp/>=<sp/>item-&gt;FirstChildElement(</highlight><highlight class="stringliteral">&quot;source&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Source<sp/>element<sp/>in<sp/>the<sp/>XML<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sourceElem)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itemMap[</highlight><highlight class="stringliteral">&quot;source&quot;</highlight><highlight class="normal">]<sp/>=<sp/>sourceElem-&gt;GetText();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sourceUrl<sp/>=<sp/>sourceElem-&gt;Attribute(</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sourceUrl)<sp/>itemMap[</highlight><highlight class="stringliteral">&quot;source_url&quot;</highlight><highlight class="normal">]<sp/>=<sp/>sourceUrl;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items.push_back(itemMap);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result++;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>items;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GoogleNews::__get_news(</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>keyword,<sp/></highlight><highlight class="comment">//<sp/>query<sp/>used<sp/>to<sp/>get<sp/>news</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>article_file<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;text_files/news_articles.txt&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>file<sp/>to<sp/>save<sp/>articles<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">){</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>query<sp/>=<sp/>this-&gt;__news_url<sp/>+<sp/>keyword<sp/>+<sp/>this-&gt;__url_parameters();<sp/></highlight><highlight class="comment">//<sp/>Url<sp/>query<sp/>to<sp/>get<sp/>news</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>query<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>content<sp/>=<sp/>this-&gt;__get_rss_content(query);<sp/></highlight><highlight class="comment">//<sp/>XML<sp/>Content<sp/>from<sp/>the<sp/>news<sp/>query</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ofstream<sp/>articles_file;<sp/></highlight><highlight class="comment">//<sp/>File<sp/>object<sp/>to<sp/>save<sp/>articles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>items<sp/>=<sp/>this-&gt;__parse_rss_content(content);<sp/></highlight><highlight class="comment">//<sp/>Items<sp/>in<sp/>the<sp/>XML<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>articles_file.open(article_file.c_str());</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>item<sp/>:<sp/>items)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>articles_file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;------------------------&gt;&gt;--&gt;&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>articles_file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Title:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>item.at(</highlight><highlight class="stringliteral">&quot;title&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>articles_file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Link:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>item.at(</highlight><highlight class="stringliteral">&quot;link&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>articles_file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PubDate:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>item.at(</highlight><highlight class="stringliteral">&quot;pubDate&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>articles_file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Description:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>item.at(</highlight><highlight class="stringliteral">&quot;description&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>articles_file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Source:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>item.at(</highlight><highlight class="stringliteral">&quot;source&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>articles_file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Source<sp/>URL:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>item.at(</highlight><highlight class="stringliteral">&quot;source_url&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>articles_file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;&lt;--&lt;&lt;------------------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>articles_file<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>articles_file.close();</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">std::string<sp/><ref refid="dc/d59/classGoogleNews_1a25a1e21711c8fc0760a99e2fdab3eb55" kindref="member">GoogleNews::_get_language</ref>(){</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1aa3304912ba70f5939785b3f92d354240" kindref="member">_language</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">std::string<sp/><ref refid="dc/d59/classGoogleNews_1a4131dfff2de824d36a9b1828e26b840a" kindref="member">GoogleNews::_get_country</ref>(){</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1acd148c22d137fb6d4740b52d0217ab65" kindref="member">_country</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal">std::string<sp/><ref refid="dc/d59/classGoogleNews_1a92738667ed591803bfb4f3dc00828784" kindref="member">GoogleNews::_get_period</ref>(){</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1aec3c5d1c4039b4a16a68974eaaea1f9b" kindref="member">_period</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">std::string<sp/><ref refid="dc/d59/classGoogleNews_1ad7d26b76fbaf7b5606d1e767f1bd4f02" kindref="member">GoogleNews::_get_start_date</ref>(){</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1a025ae1d5aed680321026405aa8b13355" kindref="member">_start_date</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">std::string<sp/><ref refid="dc/d59/classGoogleNews_1a382e35fb369776812408c984f6a57995" kindref="member">GoogleNews::_get_end_date</ref>(){</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1a4b8c0b77d0aa179eb83e9d8c89842724" kindref="member">_end_date</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dc/d59/classGoogleNews_1aaa631e969239edde8949cada981b2437" kindref="member">GoogleNews::_get_max_results</ref>(){</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1ab6124f84e31a150bb8a610290606338e" kindref="member">_max_results</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="dc/d59/classGoogleNews_1a1bf65c22f59ccc6a9c40735897991d33" kindref="member">GoogleNews::_get_exclude_websites</ref>(){</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1a3c7a018ed33131d0e15d6ae103b48302" kindref="member">_exclude_websites</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d59/classGoogleNews_1a4bd971ceb7df3329a6ed6cd3956e44ed" kindref="member">GoogleNews::_get_news</ref>(</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>keyword,<sp/></highlight><highlight class="comment">//<sp/>Keyword<sp/>used<sp/>to<sp/>search<sp/>news</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;text_files/news_articles.txt&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>File<sp/>to<sp/>save<sp/>articles<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">){</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>query<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/search?q=&quot;</highlight><highlight class="normal"><sp/>+<sp/>keyword;<sp/></highlight><highlight class="comment">//<sp/>News<sp/>Query<sp/>to<sp/>search<sp/>news</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;__get_news(query,<sp/>filename);</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d59/classGoogleNews_1ae5d2af359699c224b8c50490aeece744" kindref="member">GoogleNews::_get_latest_topics</ref>(</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;text_files/news_articles.txt&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>File<sp/>to<sp/>save<sp/>articles<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal">){</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;__get_news(</highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">,<sp/>filename);</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d59/classGoogleNews_1a33c977752f385413915172b6fe6a24b4" kindref="member">GoogleNews::_get_news_by_topic</ref>(</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>topic,<sp/></highlight><highlight class="comment">//<sp/>Search<sp/>the<sp/>news<sp/>on<sp/>this<sp/>topic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;text_files/news_articles.txt&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>File<sp/>to<sp/>save<sp/>articles<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal">){</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;__contains(this-&gt;__available_topics,<sp/>topic)){</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>query<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;headlines/section/topic/&quot;</highlight><highlight class="normal"><sp/>+<sp/>topic<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;__get_news(query,<sp/>filename);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d59/classGoogleNews_1afc47ae362ddfb99c0b3e856b436a836d" kindref="member">GoogleNews::_get_news_by_country</ref>(</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>country,<sp/></highlight><highlight class="comment">//<sp/>Search<sp/>the<sp/>news<sp/>on<sp/>this<sp/>country</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;text_files/news_articles.txt&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>File<sp/>to<sp/>save<sp/>articles<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">){</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;__contains(this-&gt;__available_countries,<sp/>country)){</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>query<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;headlines/section/geo/&quot;</highlight><highlight class="normal"><sp/>+<sp/>country<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Query<sp/>with<sp/>country</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;__get_news(query,<sp/>filename);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d59/classGoogleNews_1a3485157061bb4fb3f1cfa9f793c532c4" kindref="member">GoogleNews::_get_news_by_site</ref>(</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>site,<sp/></highlight><highlight class="comment">//<sp/>Search<sp/>the<sp/>news<sp/>on<sp/>this<sp/>site</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;text_files/news_articles.txt&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>File<sp/>to<sp/>save<sp/>articles<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal">){</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;__get_news(</highlight><highlight class="stringliteral">&quot;site:&quot;</highlight><highlight class="normal"><sp/>+<sp/>site,<sp/>filename);</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d59/classGoogleNews_1a0d4c8b3f5e3c2316d3852ab5db119674" kindref="member">GoogleNews::_set_language</ref>(</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>language<sp/></highlight><highlight class="comment">//<sp/>Languge<sp/>you<sp/>want<sp/>to<sp/>get<sp/>the<sp/>news<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">){</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1aa3304912ba70f5939785b3f92d354240" kindref="member">_language</ref><sp/>=<sp/>language;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d59/classGoogleNews_1a6b103989a088bb0c6a9fec7bf697011b" kindref="member">GoogleNews::_set_country</ref>(</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>country<sp/></highlight><highlight class="comment">//<sp/>Country<sp/>you<sp/>want<sp/>to<sp/>get<sp/>the<sp/>news<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal">){</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1acd148c22d137fb6d4740b52d0217ab65" kindref="member">_country</ref><sp/>=<sp/>country;</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d59/classGoogleNews_1ada8d16cc4876c105730534bef3907728" kindref="member">GoogleNews::_set_period</ref>(</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>period<sp/></highlight><highlight class="comment">//<sp/>Time<sp/>period<sp/>to<sp/>get<sp/>news<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal">){</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1aec3c5d1c4039b4a16a68974eaaea1f9b" kindref="member">_period</ref><sp/>=<sp/>period;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/d59/classGoogleNews_1a1cb58f8fcabd0d0c6da8301e6d5df2ba" kindref="member">GoogleNews::_set_start_date</ref>(</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>start_date<sp/></highlight><highlight class="comment">//<sp/>Starting<sp/>date<sp/>for<sp/>when<sp/>to<sp/>get<sp/>news<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal">){</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1a025ae1d5aed680321026405aa8b13355" kindref="member">_start_date</ref><sp/>=<sp/>start_date;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;__start_year<sp/>=<sp/>std::stoi(start_date.substr(0,<sp/>4));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;__start_month<sp/>=<sp/>std::stoi(start_date.substr(5,<sp/>2));</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;__start_day<sp/>=<sp/>std::stoi(start_date.substr(8,<sp/>2));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;__is_date_different(</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;__start_year,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;__start_month,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;__start_day,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;__end_year,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;__end_month,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;__end_day</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/d59/classGoogleNews_1ae7cb80e0d863e6453e2fc78b10323917" kindref="member">GoogleNews::_set_end_date</ref>(</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>end_date<sp/></highlight><highlight class="comment">//<sp/>Ending<sp/>date<sp/>till<sp/>when<sp/>news<sp/>is<sp/>presented</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal">){</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1a4b8c0b77d0aa179eb83e9d8c89842724" kindref="member">_end_date</ref><sp/>=<sp/>end_date;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;__end_year<sp/>=<sp/>std::stoi(end_date.substr(0,<sp/>4));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;__end_month<sp/>=<sp/>std::stoi(end_date.substr(5,<sp/>2));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;__end_day<sp/>=<sp/>std::stoi(end_date.substr(8,<sp/>2));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;__is_date_different(</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;__start_year,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;__start_month,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;__start_day,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;__end_year,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;__end_month,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;__end_day</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d59/classGoogleNews_1a9431e69a625cb37e29d4b4f78cd88806" kindref="member">GoogleNews::_set_max_results</ref>(</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_results<sp/></highlight><highlight class="comment">//<sp/>Max<sp/>number<sp/>of<sp/>results<sp/>for<sp/>the<sp/>news</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal">){</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1ab6124f84e31a150bb8a610290606338e" kindref="member">_max_results</ref><sp/>=<sp/>max_results;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d59/classGoogleNews_1abf98b137b4aa1457487af94aee93b115" kindref="member">GoogleNews::_set_excluded_websites</ref>(</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>excluded_websites<sp/></highlight><highlight class="comment">//<sp/>Websites<sp/>to<sp/>exclude<sp/>from<sp/>the<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal">){</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dc/d59/classGoogleNews_1a3c7a018ed33131d0e15d6ae103b48302" kindref="member">_exclude_websites</ref><sp/>=<sp/>excluded_websites;</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="cpp_files/program_files/news_configure.cpp"/>
  </compounddef>
</doxygen>
