<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classFolder" xml:lang="en-US">
<title>Folder Class Reference</title>
<indexterm><primary>Folder</primary></indexterm>
<para>

<para>Class for folder manipulation. </para>
 
</para>
<para>
<computeroutput>#include &lt;folder_configure.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classFolder_1a8af69fd19ba86816c60b4c2291311eb1">Folder</link> ()</para>

<para>Class Constructor. </para>
</listitem>
            <listitem><para><link linkend="_classFolder_1a7b9eaf0f340d5275809494685b0a3e1d">~Folder</link> ()</para>

<para>Class Destructor. </para>
</listitem>
            <listitem><para>void <link linkend="_classFolder_1a8bcb38a928af1a0d96a9ff644b98df49">_create_folder</link> (const std::string folder_name, const std::string folder_path)</para>

<para>Function to create a folder. </para>
</listitem>
            <listitem><para>void <link linkend="_classFolder_1a44b00fd74b1acf564bca15a0b9e4a462">_delete_folder</link> (const std::string folder_name, const std::string folder_path)</para>

<para>Function to delete a folder. </para>
</listitem>
            <listitem><para>void <link linkend="_classFolder_1ad544b0154fb21e00817d758756e83d88">_list_folder</link> (const std::string folder_name, const std::string list_filename, const std::string list_file_path, const std::string folder_path)</para>

<para>Function to list a folder contents. </para>
</listitem>
            <listitem><para>void <link linkend="_classFolder_1ae1550ce683d2fa681792cde7c8479dcd">_rename_folder</link> (const std::string folder_name, const std::string new_folder_name, const std::string folder_path)</para>

<para>Function to rename a folder. </para>
</listitem>
            <listitem><para>void <link linkend="_classFolder_1acf4907b6c4b7e5b69e436b033931a25a">_move_folder</link> (const std::string folder_name, const std::string new_path, const std::string folder_path)</para>

<para>Function to move a folder. </para>
</listitem>
            <listitem><para>void <link linkend="_classFolder_1a9e21df366f1f5c2f7b1f61d21c6e273d">_copy_folder</link> (const std::string folder_name, const std::string new_path, const std::string folder_path)</para>

<para>Function to copy a folder. </para>
</listitem>
            <listitem><para>bool <link linkend="_classFolder_1a3171b55faafcc80af43f940282d9eca8">_check_folder</link> (const std::string folder_name, const std::string folder_path)</para>

<para>Function to check if folder exists. </para>
</listitem>
            <listitem><para>void <link linkend="_classFolder_1a74a369ee4b6e99367fe24a026af8295a">_hide_folder</link> (const std::string folder_name, const std::string folder_path)</para>

<para>Function to hide a folder. </para>
</listitem>
            <listitem><para>void <link linkend="_classFolder_1a0f1d7843485db28659b03b28ad1aed62">_unhide_folder</link> (const std::string folder_name, const std::string folder_path)</para>

<para>Function to hide a folder. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Class for folder manipulation. </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classFolder_1a8af69fd19ba86816c60b4c2291311eb1"/><section>
    <title>Folder()</title>
<indexterm><primary>Folder</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>Folder</secondary></indexterm>
<para><computeroutput>Folder::Folder ( )</computeroutput></para><para>

<para>Class Constructor. </para>
</para>
</section>
<anchor xml:id="_classFolder_1a7b9eaf0f340d5275809494685b0a3e1d"/><section>
    <title>~Folder()</title>
<indexterm><primary>~Folder</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>~Folder</secondary></indexterm>
<para><computeroutput>Folder::~Folder ( )</computeroutput></para><para>

<para>Class Destructor. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classFolder_1a3171b55faafcc80af43f940282d9eca8"/><section>
    <title>_check_folder()</title>
<indexterm><primary>_check_folder</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>_check_folder</secondary></indexterm>
<para><computeroutput>bool Folder::_check_folder (const std::string folder_name, const std::string folder_path = <computeroutput>&quot;&quot;</computeroutput>
)</computeroutput></para><para>

<para>Function to check if folder exists. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>folder_name</entry><entry>
<para>Name of the folder </para>
</entry>
                            </row>
                            <row>
<entry>folder_path</entry><entry>
<para>Path of the folder </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>True if folder exists, false otherwise </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classFolder_1a9e21df366f1f5c2f7b1f61d21c6e273d"/><section>
    <title>_copy_folder()</title>
<indexterm><primary>_copy_folder</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>_copy_folder</secondary></indexterm>
<para><computeroutput>void Folder::_copy_folder (const std::string folder_name, const std::string new_path, const std::string folder_path = <computeroutput>&quot;&quot;</computeroutput>
)</computeroutput></para><para>

<para>Function to copy a folder. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>folder_name</entry><entry>
<para>Name of the folder </para>
</entry>
                            </row>
                            <row>
<entry>new_path</entry><entry>
<para>New path of the folder </para>
</entry>
                            </row>
                            <row>
<entry>folder_path</entry><entry>
<para>Path of the folder </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classFolder_1a8bcb38a928af1a0d96a9ff644b98df49"/><section>
    <title>_create_folder()</title>
<indexterm><primary>_create_folder</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>_create_folder</secondary></indexterm>
<para><computeroutput>void Folder::_create_folder (const std::string folder_name, const std::string folder_path = <computeroutput>&quot;&quot;</computeroutput>
)</computeroutput></para><para>

<para>Function to create a folder. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>folder_name</entry><entry>
<para>Name of the folder </para>
</entry>
                            </row>
                            <row>
<entry>folder_path</entry><entry>
<para>Path of the folder </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classFolder_1a44b00fd74b1acf564bca15a0b9e4a462"/><section>
    <title>_delete_folder()</title>
<indexterm><primary>_delete_folder</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>_delete_folder</secondary></indexterm>
<para><computeroutput>void Folder::_delete_folder (const std::string folder_name, const std::string folder_path = <computeroutput>&quot;&quot;</computeroutput>
)</computeroutput></para><para>

<para>Function to delete a folder. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>folder_name</entry><entry>
<para>Name of the folder </para>
</entry>
                            </row>
                            <row>
<entry>folder_path</entry><entry>
<para>Path of the folder </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classFolder_1a74a369ee4b6e99367fe24a026af8295a"/><section>
    <title>_hide_folder()</title>
<indexterm><primary>_hide_folder</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>_hide_folder</secondary></indexterm>
<para><computeroutput>void Folder::_hide_folder (const std::string folder_name, const std::string folder_path = <computeroutput>&quot;&quot;</computeroutput>
)</computeroutput></para><para>

<para>Function to hide a folder. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>folder_name</entry><entry>
<para>Name of the folder </para>
</entry>
                            </row>
                            <row>
<entry>folder_path</entry><entry>
<para>Path of the folder </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classFolder_1ad544b0154fb21e00817d758756e83d88"/><section>
    <title>_list_folder()</title>
<indexterm><primary>_list_folder</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>_list_folder</secondary></indexterm>
<para><computeroutput>void Folder::_list_folder (const std::string folder_name, const std::string list_filename = <computeroutput>&quot;folder_list_file.txt&quot;</computeroutput>
, const std::string list_file_path = <computeroutput>&quot;log_files/&quot;</computeroutput>
, const std::string folder_path = <computeroutput>&quot;&quot;</computeroutput>
)</computeroutput></para><para>

<para>Function to list a folder contents. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>folder_name</entry><entry>
<para>Name of the folder </para>
</entry>
                            </row>
                            <row>
<entry>list_filename</entry><entry>
<para>Name of the list file to store folder content list </para>
</entry>
                            </row>
                            <row>
<entry>list_file_path</entry><entry>
<para>Path of the list file </para>
</entry>
                            </row>
                            <row>
<entry>folder_path</entry><entry>
<para>Path of the folder </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classFolder_1acf4907b6c4b7e5b69e436b033931a25a"/><section>
    <title>_move_folder()</title>
<indexterm><primary>_move_folder</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>_move_folder</secondary></indexterm>
<para><computeroutput>void Folder::_move_folder (const std::string folder_name, const std::string new_path, const std::string folder_path = <computeroutput>&quot;&quot;</computeroutput>
)</computeroutput></para><para>

<para>Function to move a folder. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>folder_name</entry><entry>
<para>Name of the folder </para>
</entry>
                            </row>
                            <row>
<entry>new_path</entry><entry>
<para>New path of the folder </para>
</entry>
                            </row>
                            <row>
<entry>folder_path</entry><entry>
<para>Path of the folder </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classFolder_1ae1550ce683d2fa681792cde7c8479dcd"/><section>
    <title>_rename_folder()</title>
<indexterm><primary>_rename_folder</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>_rename_folder</secondary></indexterm>
<para><computeroutput>void Folder::_rename_folder (const std::string folder_name, const std::string new_folder_name, const std::string folder_path = <computeroutput>&quot;&quot;</computeroutput>
)</computeroutput></para><para>

<para>Function to rename a folder. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>folder_name</entry><entry>
<para>Name of the folder </para>
</entry>
                            </row>
                            <row>
<entry>new_folder_name</entry><entry>
<para>New Name of the folder </para>
</entry>
                            </row>
                            <row>
<entry>folder_path</entry><entry>
<para>Path of the folder </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classFolder_1a0f1d7843485db28659b03b28ad1aed62"/><section>
    <title>_unhide_folder()</title>
<indexterm><primary>_unhide_folder</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>_unhide_folder</secondary></indexterm>
<para><computeroutput>void Folder::_unhide_folder (const std::string folder_name, const std::string folder_path = <computeroutput>&quot;&quot;</computeroutput>
)</computeroutput></para><para>

<para>Function to hide a folder. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>folder_name</entry><entry>
<para>Name of the folder </para>
</entry>
                            </row>
                            <row>
<entry>folder_path</entry><entry>
<para>Path of the folder </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
<link linkend="_folder__configure_8h">folder_configure.h</link><link linkend="_folder__configure_8cpp">folder_configure.cpp</link></section>
</section>
