<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classFile" xml:lang="en-US">
<title>File Class Reference</title>
<indexterm><primary>File</primary></indexterm>
<para>

<para>Class for file manipulation. </para>
 
</para>
<para>
<computeroutput>#include &lt;file_configure.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classFile_1ae039af5807fc385f41b60644725d15d0">File</link> ()</para>

<para>Class Constructor. </para>
</listitem>
            <listitem><para><link linkend="_classFile_1ac704ebdf5f57d7a1c5ddf409d797fb69">~File</link> ()</para>

<para>Class Destructor. </para>
</listitem>
            <listitem><para>std::map&lt; std::string, std::string &gt; <link linkend="_classFile_1aca829fa2a9eb1e3166325c26113b64a0">_class_info</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classFile_1a723967366f9b4eeb3e43962bdc91dbd9">_create_file</link> (const std::string filename, const std::string file_path)</para>

<para>Function to create a file. </para>
</listitem>
            <listitem><para>void <link linkend="_classFile_1aee963ae86073e1199f232218e826e0cd">_write_file</link> (const std::string filename, const std::string content, const std::string file_path)</para>

<para>Function to write to a file. </para>
</listitem>
            <listitem><para>std::string <link linkend="_classFile_1a4c19bcf4802b91cfbfeb45d87c488c42">_read_file</link> (const std::string filename, const std::string file_path)</para>

<para>Function to read a file. </para>
</listitem>
            <listitem><para>void <link linkend="_classFile_1a6a3bcacf86cf46621dff7bf117a5c17a">_delete_file</link> (const std::string filename, const std::string file_path)</para>

<para>Function to delete a file. </para>
</listitem>
            <listitem><para>void <link linkend="_classFile_1a32378c4d0669fa2ca78e6bf1f626326f">_rename_file</link> (const std::string filename, const std::string new_filename, const std::string file_path)</para>

<para>Function to rename a file. </para>
</listitem>
            <listitem><para>void <link linkend="_classFile_1aa52321227bfc877fa28604667cdbfa1c">_move_file</link> (const std::string filename, const std::string new_path, const std::string file_path)</para>

<para>Function to move a file. </para>
</listitem>
            <listitem><para>void <link linkend="_classFile_1a175cf0f3fec5117b8e18c0037d658656">_copy_file</link> (const std::string filename, const std::string new_path, const std::string file_path)</para>

<para>Function to copy a file. </para>
</listitem>
            <listitem><para>bool <link linkend="_classFile_1a6d339880cb2d39dcc068841b9a68496a">_check_file</link> (const std::string filename, const std::string file_path)</para>

<para>Function to check if it is a file. </para>
</listitem>
            <listitem><para>void <link linkend="_classFile_1a3ef81a3faf9cf11388825bc4103a9b6a">_hide_file</link> (const std::string filename, const std::string file_path)</para>

<para>Function to hide a file. </para>
</listitem>
            <listitem><para>void <link linkend="_classFile_1aaa9df660becc699f79140061975bdf2f">_unhide_file</link> (const std::string filename, const std::string file_path)</para>

<para>Function to unhide a file. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Class for file manipulation. </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classFile_1ae039af5807fc385f41b60644725d15d0"/><section>
    <title>File()</title>
<indexterm><primary>File</primary><secondary>File</secondary></indexterm>
<indexterm><primary>File</primary><secondary>File</secondary></indexterm>
<para><computeroutput>File::File ( )</computeroutput></para><para>

<para>Class Constructor. </para>
</para>
</section>
<anchor xml:id="_classFile_1ac704ebdf5f57d7a1c5ddf409d797fb69"/><section>
    <title>~File()</title>
<indexterm><primary>~File</primary><secondary>File</secondary></indexterm>
<indexterm><primary>File</primary><secondary>~File</secondary></indexterm>
<para><computeroutput>File::~File ( )</computeroutput></para><para>

<para>Class Destructor. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classFile_1a6d339880cb2d39dcc068841b9a68496a"/><section>
    <title>_check_file()</title>
<indexterm><primary>_check_file</primary><secondary>File</secondary></indexterm>
<indexterm><primary>File</primary><secondary>_check_file</secondary></indexterm>
<para><computeroutput>bool File::_check_file (const std::string filename, const std::string file_path = <computeroutput>&quot;&quot;</computeroutput>
)</computeroutput></para><para>

<para>Function to check if it is a file. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>filename</entry><entry>
<para>Name of the file </para>
</entry>
                            </row>
                            <row>
<entry>file_path</entry><entry>
<para>Path of the file </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>True if it is a file, false otherwise </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classFile_1aca829fa2a9eb1e3166325c26113b64a0"/><section>
    <title>_class_info()</title>
<indexterm><primary>_class_info</primary><secondary>File</secondary></indexterm>
<indexterm><primary>File</primary><secondary>_class_info</secondary></indexterm>
<para><computeroutput>std::map&lt; std::string, std::string &gt; File::_class_info ( )</computeroutput></para></section>
<anchor xml:id="_classFile_1a175cf0f3fec5117b8e18c0037d658656"/><section>
    <title>_copy_file()</title>
<indexterm><primary>_copy_file</primary><secondary>File</secondary></indexterm>
<indexterm><primary>File</primary><secondary>_copy_file</secondary></indexterm>
<para><computeroutput>void File::_copy_file (const std::string filename, const std::string new_path, const std::string file_path = <computeroutput>&quot;&quot;</computeroutput>
)</computeroutput></para><para>

<para>Function to copy a file. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>filename</entry><entry>
<para>Name of the file </para>
</entry>
                            </row>
                            <row>
<entry>new_path</entry><entry>
<para>New path of the file </para>
</entry>
                            </row>
                            <row>
<entry>file_path</entry><entry>
<para>Path of the file </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classFile_1a723967366f9b4eeb3e43962bdc91dbd9"/><section>
    <title>_create_file()</title>
<indexterm><primary>_create_file</primary><secondary>File</secondary></indexterm>
<indexterm><primary>File</primary><secondary>_create_file</secondary></indexterm>
<para><computeroutput>void File::_create_file (const std::string filename, const std::string file_path = <computeroutput>&quot;&quot;</computeroutput>
)</computeroutput></para><para>

<para>Function to create a file. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>filename</entry><entry>
<para>Name of the file </para>
</entry>
                            </row>
                            <row>
<entry>file_path</entry><entry>
<para>Path of the file </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classFile_1a6a3bcacf86cf46621dff7bf117a5c17a"/><section>
    <title>_delete_file()</title>
<indexterm><primary>_delete_file</primary><secondary>File</secondary></indexterm>
<indexterm><primary>File</primary><secondary>_delete_file</secondary></indexterm>
<para><computeroutput>void File::_delete_file (const std::string filename, const std::string file_path = <computeroutput>&quot;&quot;</computeroutput>
)</computeroutput></para><para>

<para>Function to delete a file. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>filename</entry><entry>
<para>Name of the file </para>
</entry>
                            </row>
                            <row>
<entry>file_path</entry><entry>
<para>Path of the file </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classFile_1a3ef81a3faf9cf11388825bc4103a9b6a"/><section>
    <title>_hide_file()</title>
<indexterm><primary>_hide_file</primary><secondary>File</secondary></indexterm>
<indexterm><primary>File</primary><secondary>_hide_file</secondary></indexterm>
<para><computeroutput>void File::_hide_file (const std::string filename, const std::string file_path = <computeroutput>&quot;&quot;</computeroutput>
)</computeroutput></para><para>

<para>Function to hide a file. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>filename</entry><entry>
<para>Name of the file </para>
</entry>
                            </row>
                            <row>
<entry>file_path</entry><entry>
<para>Path of the file </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classFile_1aa52321227bfc877fa28604667cdbfa1c"/><section>
    <title>_move_file()</title>
<indexterm><primary>_move_file</primary><secondary>File</secondary></indexterm>
<indexterm><primary>File</primary><secondary>_move_file</secondary></indexterm>
<para><computeroutput>void File::_move_file (const std::string filename, const std::string new_path, const std::string file_path = <computeroutput>&quot;&quot;</computeroutput>
)</computeroutput></para><para>

<para>Function to move a file. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>filename</entry><entry>
<para>Name of the file </para>
</entry>
                            </row>
                            <row>
<entry>new_path</entry><entry>
<para>New path of the file </para>
</entry>
                            </row>
                            <row>
<entry>file_path</entry><entry>
<para>Path of the file </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classFile_1a4c19bcf4802b91cfbfeb45d87c488c42"/><section>
    <title>_read_file()</title>
<indexterm><primary>_read_file</primary><secondary>File</secondary></indexterm>
<indexterm><primary>File</primary><secondary>_read_file</secondary></indexterm>
<para><computeroutput>std::string File::_read_file (const std::string filename, const std::string file_path = <computeroutput>&quot;&quot;</computeroutput>
)</computeroutput></para><para>

<para>Function to read a file. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>filename</entry><entry>
<para>Name of the file </para>
</entry>
                            </row>
                            <row>
<entry>file_path</entry><entry>
<para>Path of the file </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Content of the file </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classFile_1a32378c4d0669fa2ca78e6bf1f626326f"/><section>
    <title>_rename_file()</title>
<indexterm><primary>_rename_file</primary><secondary>File</secondary></indexterm>
<indexterm><primary>File</primary><secondary>_rename_file</secondary></indexterm>
<para><computeroutput>void File::_rename_file (const std::string filename, const std::string new_filename, const std::string file_path = <computeroutput>&quot;&quot;</computeroutput>
)</computeroutput></para><para>

<para>Function to rename a file. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>filename</entry><entry>
<para>Name of the file </para>
</entry>
                            </row>
                            <row>
<entry>new_filename</entry><entry>
<para>New name of the file </para>
</entry>
                            </row>
                            <row>
<entry>file_path</entry><entry>
<para>Path of the file </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classFile_1aaa9df660becc699f79140061975bdf2f"/><section>
    <title>_unhide_file()</title>
<indexterm><primary>_unhide_file</primary><secondary>File</secondary></indexterm>
<indexterm><primary>File</primary><secondary>_unhide_file</secondary></indexterm>
<para><computeroutput>void File::_unhide_file (const std::string filename, const std::string file_path = <computeroutput>&quot;&quot;</computeroutput>
)</computeroutput></para><para>

<para>Function to unhide a file. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>filename</entry><entry>
<para>Name of the file </para>
</entry>
                            </row>
                            <row>
<entry>file_path</entry><entry>
<para>Path of the file </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classFile_1aee963ae86073e1199f232218e826e0cd"/><section>
    <title>_write_file()</title>
<indexterm><primary>_write_file</primary><secondary>File</secondary></indexterm>
<indexterm><primary>File</primary><secondary>_write_file</secondary></indexterm>
<para><computeroutput>void File::_write_file (const std::string filename, const std::string content, const std::string file_path = <computeroutput>&quot;&quot;</computeroutput>
)</computeroutput></para><para>

<para>Function to write to a file. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>filename</entry><entry>
<para>Name of the file </para>
</entry>
                            </row>
                            <row>
<entry>content</entry><entry>
<para>Content of the file </para>
</entry>
                            </row>
                            <row>
<entry>file_path</entry><entry>
<para>Path of the file </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
<link linkend="_file__configure_8h">file_configure.h</link><link linkend="_file__configure_8cpp">file_configure.cpp</link></section>
</section>
